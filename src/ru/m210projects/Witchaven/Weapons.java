package ru.m210projects.Witchaven;

import static ru.m210projects.Witchaven.AI.Ai.*;
import static ru.m210projects.Build.Engine.*;
import static ru.m210projects.Build.Pragmas.*;
import static ru.m210projects.Build.Gameutils.*;
import static ru.m210projects.Witchaven.Globals.*;
import static ru.m210projects.Witchaven.Main.*;
import static ru.m210projects.Witchaven.Names.*;
import static ru.m210projects.Witchaven.WH2Names.*;
import static ru.m210projects.Witchaven.WHScreen.*;
import static ru.m210projects.Witchaven.WHOBJ.*;
import static ru.m210projects.Witchaven.WHSND.*;
import static ru.m210projects.Witchaven.WHTAG.*;
import static ru.m210projects.Witchaven.WHPLR.*;
import static ru.m210projects.Witchaven.Spellbooks.*;

import ru.m210projects.Witchaven.Types.PLAYER;
import ru.m210projects.Witchaven.Types.WEAPON;

public class Weapons {

	public static final int MAXWEAPONS = 10;

	// EG 17 Oct 2017: Backport shield toggle
	public static int dropshieldcnt = 0;
	public static boolean droptheshield = false;
	private static int weaponuseless = 0;
	private static boolean madeahit;
	public static int dahand = 0;

	public static int weapondrop;
	private static int weapondropgoal;

	public static int snakex, snakey;
	public static int enchantedsoundhandle = -1;
	private static int arrowcnt, throwpikecnt;

	public static final WEAPON[] spikeanimtics = { new WEAPON(10, DIESPIKE, 136, 145),
			new WEAPON(10, DIESPIKE + 1, 136, 124), new WEAPON(10, DIESPIKE + 2, 136, 100),
			new WEAPON(10, DIESPIKE + 3, 136, 70), new WEAPON(10, DIESPIKE + 4, 136, 50) };

	public static final WEAPON[][] wh2throwanimtics = {
		     // MUTWOHANDS  - scare spell
		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, MUTWOHANDS + 1, 0, 128), new WEAPON(10, MUTWOHANDS + 2, 0, 93),
		     new WEAPON(10, MUTWOHANDS + 3, 0, 83), new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
		     new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109), new WEAPON(10, MUTWOHANDS + 8, 69, 113),
		     new WEAPON(10, MUTWOHANDS + 9, 65, 115), new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
		     new WEAPON(1, 0, 127, 170)
		     },

		     // MUTWOHANDS  - night vision
		     {new WEAPON(10, ZFIREBALL, 0, 177), new WEAPON(10, ZFIREBALL + 1, 0, 137), new WEAPON(10, ZFIREBALL + 2, 48, 82),
		     new WEAPON(10, ZFIREBALL + 3, 127, 41), new WEAPON(10, ZFIREBALL + 4, 210, 9), new WEAPON(10, ZFIREBALL + 5, 284, 26),
		     new WEAPON(10, ZFIREBALL + 6, 213, 63), new WEAPON(10, ZFIREBALL + 7, 147, 99), new WEAPON(10, ZFIREBALL + 8, 91, 136),
		     new WEAPON(10, ZFIREBALL + 9, 46, 183), new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170),
		     new WEAPON(1, 0, 127, 170)
		    },

		     // MUTWOHANDS  - freeze
//		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, ZFREEZE + 1, 0, 51), new WEAPON(10, ZFREEZE + 2, 0, 71),
//		     new WEAPON(10, ZFREEZE + 3, 4, 85), new WEAPON(10, ZFREEZE + 4, 32, 78), new WEAPON(10, ZFREEZE + 5, 51, 80),
//		     new WEAPON(10, ZFREEZE + 6, 50, 80), new WEAPON(10, ZFREEZE + 7, 49, 89), new WEAPON(10, ZFREEZE + 8, 49, 89),
//		     new WEAPON(10, ZFREEZE + 9, 49, 98), new WEAPON(10, ZFREEZE + 10, 47, 105), new WEAPON(10, ZFREEZE + 11, 48, 121),
//		     new WEAPON(1, 0, 127, 170)
		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, MUTWOHANDS + 1, 0, 128), new WEAPON(10, MUTWOHANDS + 2, 0, 93),
			     new WEAPON(10, MUTWOHANDS + 3, 0, 83), new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
			     new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109), new WEAPON(10, MUTWOHANDS + 8, 69, 113),
			     new WEAPON(10, MUTWOHANDS + 9, 65, 115), new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
			     new WEAPON(1, 0, 127, 170)
		    },

		     // MUTWOHANDS  - magic arrow
		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, MUTWOHANDS + 1, 0, 128), new WEAPON(10, MUTWOHANDS + 2, 0, 93),
		     new WEAPON(10, MUTWOHANDS + 3, 0, 83), new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
		     new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109), new WEAPON(10, MUTWOHANDS + 8, 69, 113),
		     new WEAPON(10, MUTWOHANDS + 9, 65, 115), new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
		     new WEAPON(1, 0, 127, 170)
		    },
		     // MUTWOHANDS  - open door
		     {new WEAPON(15, MUTWOHANDS, 19, 155), new WEAPON(15, MUTWOHANDS + 1, 0, 128), new WEAPON(15, MUTWOHANDS + 2, 0, 93),
		     new WEAPON(15, MUTWOHANDS + 3, 0, 83), new WEAPON(15, MUTWOHANDS + 4, 0, 72), new WEAPON(15, MUTWOHANDS + 5, 0, 83),
		     new WEAPON(15, MUTWOHANDS + 6, 10, 96), new WEAPON(15, MUTWOHANDS + 7, 43, 109), new WEAPON(15, MUTWOHANDS + 8, 69, 113),
		     new WEAPON(15, MUTWOHANDS + 9, 65, 115), new WEAPON(15, MUTWOHANDS + 10, 64, 117), new WEAPON(15, MUTWOHANDS + 11, 63, 117),
		     new WEAPON(1, 0, 127, 170)
		    },

		     // MUMEDUSA    - fly
		     {new WEAPON(10, ZLIGHT, 0, 177), new WEAPON(10, ZLIGHT + 1, 0, 137), new WEAPON(10, ZLIGHT + 2, 48, 82),
		     new WEAPON(10, ZLIGHT + 3, 127, 41), new WEAPON(10, ZLIGHT + 4, 210, 9), new WEAPON(10, ZLIGHT + 5, 284, 26),
		     new WEAPON(10, ZLIGHT + 6, 213, 63), new WEAPON(10, ZLIGHT + 7, 147, 99), new WEAPON(10, ZLIGHT + 8, 91, 136),
		     new WEAPON(10, ZLIGHT + 9, 46, 183), new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170),
		     new WEAPON(1, 0, 127, 170)
		     },

		     // MUTWOHANDS  - fireball
		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, ZFIREBALL + 1, 0, 137), new WEAPON(10, ZFIREBALL + 2, 48, 82),
		     new WEAPON(10, ZFIREBALL + 3, 127, 41), new WEAPON(10, ZFIREBALL + 4, 210, 9), new WEAPON(10, ZFIREBALL + 5, 284, 26),
		     new WEAPON(10, ZFIREBALL + 6, 213, 63), new WEAPON(10, ZFIREBALL + 7, 147, 99), new WEAPON(10, ZFIREBALL + 8, 91, 136),
		     new WEAPON(10, ZFIREBALL + 9, 46, 183), new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170),
		     new WEAPON(1, 0, 127, 170)
		     },

		     // MUTWOHANDS  - nuke
		     {new WEAPON(1, 0, 127, 170), new WEAPON(10, MUTWOHANDS + 1, 0, 128), new WEAPON(10, MUTWOHANDS + 2, 0, 93),
		     new WEAPON(10, MUTWOHANDS + 3, 0, 83), new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
		     new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109), new WEAPON(10, MUTWOHANDS + 8, 69, 113),
		     new WEAPON(10, MUTWOHANDS + 9, 65, 115), new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
		     new WEAPON(1, 0, 127, 170)
		     }
		};

	public static final WEAPON[][] throwanimtics = {
			// MUTWOHANDS
			{ new WEAPON(10, MUTWOHANDS, 19, 155), new WEAPON(10, MUTWOHANDS + 1, 0, 128),
					new WEAPON(10, MUTWOHANDS + 2, 0, 93), new WEAPON(10, MUTWOHANDS + 3, 0, 83),
					new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
					new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109),
					new WEAPON(10, MUTWOHANDS + 8, 69, 113), new WEAPON(10, MUTWOHANDS + 9, 65, 115),
					new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
					new WEAPON(1, 0, 127, 170) },
			// MUMEDUSA
			{ new WEAPON(10, MUMEDUSA, 0, 177), new WEAPON(10, MUMEDUSA + 1, 0, 137),
					new WEAPON(10, MUMEDUSA + 2, 48, 82), new WEAPON(10, MUMEDUSA + 3, 127, 41),
					new WEAPON(10, MUMEDUSA + 4, 210, 9), new WEAPON(10, MUMEDUSA + 5, 284, 26),
					new WEAPON(10, MUMEDUSA + 6, 213, 63), new WEAPON(10, MUMEDUSA + 7, 147, 99),
					new WEAPON(10, MUMEDUSA + 8, 91, 136), new WEAPON(10, MUMEDUSA + 9, 46, 183),
					new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170) },
			// BMUTWOHANDS
			{ new WEAPON(10, MUTWOHANDS, 19, 155), new WEAPON(10, MUTWOHANDS + 1, 0, 128),
					new WEAPON(10, MUTWOHANDS + 2, 0, 93), new WEAPON(10, MUTWOHANDS + 3, 0, 83),
					new WEAPON(10, BMUTWOHANDS, 0, 74), new WEAPON(10, BMUTWOHANDS + 1, 0, 97),
					new WEAPON(10, BMUTWOHANDS + 2, 10, 109), new WEAPON(10, BMUTWOHANDS + 3, 43, 113),
					new WEAPON(10, BMUTWOHANDS + 4, 69, 115), new WEAPON(10, BMUTWOHANDS + 5, 65, 117),
					new WEAPON(10, BMUTWOHANDS + 6, 64, 117), new WEAPON(10, BMUTWOHANDS + 7, 63, 117),
					new WEAPON(1, 0, 127, 170) },
			// MUTWOHANDS
			{ new WEAPON(10, MUTWOHANDS, 19, 155), new WEAPON(10, MUTWOHANDS + 1, 0, 128),
					new WEAPON(10, MUTWOHANDS + 2, 0, 93), new WEAPON(10, MUTWOHANDS + 3, 0, 83),
					new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
					new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109),
					new WEAPON(10, MUTWOHANDS + 8, 69, 113), new WEAPON(10, MUTWOHANDS + 9, 65, 115),
					new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
					new WEAPON(1, 0, 127, 170) },
			// MUTWOHANDS
			{ new WEAPON(15, MUTWOHANDS, 19, 155), new WEAPON(15, MUTWOHANDS + 1, 0, 128),
					new WEAPON(15, MUTWOHANDS + 2, 0, 93), new WEAPON(15, MUTWOHANDS + 3, 0, 83),
					new WEAPON(15, MUTWOHANDS + 4, 0, 72), new WEAPON(15, MUTWOHANDS + 5, 0, 83),
					new WEAPON(15, MUTWOHANDS + 6, 10, 96), new WEAPON(15, MUTWOHANDS + 7, 43, 109),
					new WEAPON(15, MUTWOHANDS + 8, 69, 113), new WEAPON(15, MUTWOHANDS + 9, 65, 115),
					new WEAPON(15, MUTWOHANDS + 10, 64, 117), new WEAPON(15, MUTWOHANDS + 11, 63, 117),
					new WEAPON(1, 0, 127, 170) },
			// MUMEDUSA
			{ new WEAPON(10, MUMEDUSA, 0, 177), new WEAPON(10, MUMEDUSA + 1, 0, 137),
					new WEAPON(10, MUMEDUSA + 2, 48, 82), new WEAPON(10, MUMEDUSA + 3, 127, 41),
					new WEAPON(10, MUMEDUSA + 4, 210, 9), new WEAPON(10, MUMEDUSA + 5, 284, 26),
					new WEAPON(10, MUMEDUSA + 6, 213, 63), new WEAPON(10, MUMEDUSA + 7, 147, 99),
					new WEAPON(10, MUMEDUSA + 8, 91, 136), new WEAPON(10, MUMEDUSA + 9, 46, 183),
					new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170), new WEAPON(1, 0, 127, 170) },
			// MUTWOHANDS
			{ new WEAPON(10, MUTWOHANDS, 19, 155), new WEAPON(10, MUTWOHANDS + 1, 0, 128),
					new WEAPON(10, MUTWOHANDS + 2, 0, 93), new WEAPON(10, MUTWOHANDS + 3, 0, 83),
					new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
					new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109),
					new WEAPON(10, MUTWOHANDS + 8, 69, 113), new WEAPON(10, MUTWOHANDS + 9, 65, 115),
					new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
					new WEAPON(1, 0, 127, 170) },
			// MUTWOHANDS
			{ new WEAPON(10, MUTWOHANDS, 19, 155), new WEAPON(10, MUTWOHANDS + 1, 0, 128),
					new WEAPON(10, MUTWOHANDS + 2, 0, 93), new WEAPON(10, MUTWOHANDS + 3, 0, 83),
					new WEAPON(10, MUTWOHANDS + 4, 0, 72), new WEAPON(10, MUTWOHANDS + 5, 0, 83),
					new WEAPON(10, MUTWOHANDS + 6, 10, 96), new WEAPON(10, MUTWOHANDS + 7, 43, 109),
					new WEAPON(10, MUTWOHANDS + 8, 69, 113), new WEAPON(10, MUTWOHANDS + 9, 65, 115),
					new WEAPON(10, MUTWOHANDS + 10, 64, 117), new WEAPON(10, MUTWOHANDS + 11, 63, 117),
					new WEAPON(1, 0, 127, 170) } };

	public static final WEAPON[] cockanimtics = { new WEAPON(24, 0, 10, 10), new WEAPON(12, BOWREADYEND + 1, 101, 115),
			new WEAPON(12, BOWREADYEND + 2, 112, 0), new WEAPON(12, BOWREADYEND + 3, 115, 0),
			new WEAPON(12, BOWREADYEND + 4, 75, 13) };

	// SCOTT
	public static final WEAPON[] zcockanimtics = { new WEAPON(24, 0, 10, 10), new WEAPON(12, BOWREADYEND + 1, 101, 115),
			new WEAPON(12, BOWREADYEND + 2, 112, 0), new WEAPON(12, BOWREADYEND + 3, 115, 0),
			new WEAPON(12, ZBOWWALK, 75, 13) };

	// SCOTT
	public static final WEAPON[][] zreadyanimtics = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 180), new WEAPON(10, RFIST, 216, 170), new WEAPON(10, RFIST, 216, 160),
					new WEAPON(10, RFIST, 216, 150), new WEAPON(10, RFIST, 216, 140), new WEAPON(10, RFIST, 216, 130),
					new WEAPON(10, RFIST, 216, 124), new WEAPON(1, RFIST, 216, 124), new WEAPON(1, RFIST, 216, 124),
					new WEAPON(1, RFIST, 216, 122), new WEAPON(1, RFIST, 216, 122), new WEAPON(1, RFIST, 216, 122),
					new WEAPON(1, 0, 147, 76) },
			// ZKNIFE
			{ new WEAPON(10, ZKNIFEREADY, 69, 171), new WEAPON(10, ZKNIFEREADY + 1, 11, 146),
					new WEAPON(10, ZKNIFEREADY + 2, 25, 146), new WEAPON(10, ZKNIFEREADY + 3, 35, 158),
					new WEAPON(10, ZKNIFEREADY + 4, 38, 158), new WEAPON(10, ZKNIFEREADY + 5, 16, 157),
					new WEAPON(10, ZKNIFEREADY + 6, 37, 102), new WEAPON(10, ZKNIFEREADY + 7, 239, 63),
					new WEAPON(10, ZKNIFEREADY + 8, 214, 85), new WEAPON(10, ZKNIFEREADY + 9, 206, 110),
					new WEAPON(10, ZKNIFEREADY + 10, 217, 108), new WEAPON(10, ZKNIFEREADY + 11, 204, 95),
					new WEAPON(1, 0, 147, 76) },
			// ZSHORTREADY
			{ new WEAPON(12, ZSHORTREADY, 79, 169), new WEAPON(12, ZSHORTREADY + 1, 95, 115),
					new WEAPON(12, ZSHORTREADY + 2, 94, 93), new WEAPON(12, ZSHORTREADY + 3, 156, 77),
					new WEAPON(12, ZSHORTREADY + 4, 218, 64), new WEAPON(12, ZSHORTREADY + 5, 224, 57),
					new WEAPON(8, ZSHORTREADY + 6, 251, 54), new WEAPON(1, ZSHORTREADY + 7, 243, 92),
					new WEAPON(1, ZSHORTREADY + 7, 243, 92), new WEAPON(1, ZSHORTREADY + 7, 243, 92),
					new WEAPON(1, ZSHORTREADY + 7, 243, 92), new WEAPON(1, ZSHORTREADY + 7, 243, 92),
					new WEAPON(1, 0, 147, 76) },
			// ZSTARATTACK
			{ new WEAPON(6, ZSTARATTACK, 194, 195), new WEAPON(6, ZSTARATTACK, 194, 185),
					new WEAPON(6, ZSTARATTACK, 194, 175), new WEAPON(6, ZSTARATTACK, 194, 165),
					new WEAPON(6, ZSTARATTACK, 194, 155), new WEAPON(6, ZSTARATTACK, 194, 145),
					new WEAPON(6, ZSTARATTACK, 194, 135), new WEAPON(6, ZSTARATTACK, 194, 125),
					new WEAPON(6, ZSTARATTACK, 194, 115), new WEAPON(6, ZSTARATTACK, 194, 105),
					new WEAPON(6, ZSTARATTACK, 194, 95), new WEAPON(1, ZSTARATTACK, 194, 85),
					new WEAPON(1, 0, 147, 76) },
			// SWORD
			{ new WEAPON(10, SWORDPULL, 58, 160), new WEAPON(10, SWORDPULL + 1, 81, 111),
					new WEAPON(10, SWORDPULL + 2, 19, 88), new WEAPON(10, SWORDPULL + 3, 0, 93),
					new WEAPON(10, SWORDPULL + 4, 104, 0), new WEAPON(10, SWORDPULL + 5, 169, 0),
					new WEAPON(10, SWORDPULL + 6, 244, 38), new WEAPON(6, SWORDPULL + 7, 225, 121),
					new WEAPON(1, SWORDPULL + 7, 225, 121), new WEAPON(1, SWORDPULL + 7, 225, 121),
					new WEAPON(1, SWORDPULL + 7, 225, 121), new WEAPON(1, SWORDPULL + 7, 225, 121),
					new WEAPON(1, 0, 147, 76) },
			// ZAXE
			{ new WEAPON(8, ZAXEREADY, 0, 108), new WEAPON(8, ZAXEREADY + 1, 0, 58),
					new WEAPON(8, ZAXEREADY + 2, 0, 57), new WEAPON(8, ZAXEREADY + 3, 0, 69),
					new WEAPON(8, ZAXEREADY + 4, 0, 100), new WEAPON(8, ZAXEREADY + 5, 0, 9),
					new WEAPON(8, ZAXEREADY + 6, 33, 0), new WEAPON(8, ZAXEREADY + 7, 61, 0),
					new WEAPON(8, ZAXEREADY + 8, 73, 20), new WEAPON(8, ZAXEREADY + 9, 179, 117),
					new WEAPON(8, 0, 182, 116), new WEAPON(1, 0, 200, 122), new WEAPON(1, 0, 147, 76) },
			// ZBOW
			{ new WEAPON(12, ZBOWREADY, 0, 0), new WEAPON(12, ZBOWREADY + 1, 0, 20),
					new WEAPON(12, ZBOWREADY + 2, 0, 46), new WEAPON(12, ZBOWREADY + 3, 0, 26),
					new WEAPON(12, ZBOWREADY + 4, 0, 0), new WEAPON(12, ZBOWREADY + 5, 71, 0),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, 0, 147, 76) },
			// ZPIKE
			{ new WEAPON(8, ZPIKEREADY, 0, 150), new WEAPON(8, ZPIKEREADY + 1, 0, 94),
					new WEAPON(8, ZPIKEREADY + 2, 47, 45), new WEAPON(8, ZPIKEREADY + 3, 138, 62),
					new WEAPON(8, ZPIKEREADY + 4, 194, 95), new WEAPON(8, ZPIKEREADY + 5, 59, 121),
					new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52), new WEAPON(1, 0, 147, 76),
					new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52), new WEAPON(1, 0, 147, 76),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(12, ZTWOHANDREADY, 167, 131), new WEAPON(12, ZTWOHANDREADY + 1, 71, 117),
					new WEAPON(12, ZTWOHANDREADY, 0, 128), new WEAPON(12, ZTWOHANDREADY + 3, 0, 150),
					new WEAPON(12, ZTWOHANDREADY + 4, 10, 74), new WEAPON(12, ZTWOHANDREADY + 5, 44, 81),
					new WEAPON(12, ZTWOHANDREADY + 6, 0, 53), new WEAPON(12, ZTWOHANDREADY + 7, 112, 0),
					new WEAPON(12, ZTWOHANDREADY + 8, 220, 0), new WEAPON(12, ZTWOHANDREADY + 9, 198, 84),
					new WEAPON(12, ZTWOHANDREADY + 10, 186, 120), new WEAPON(12, ZTWOHANDREADY + 11, 188, 124),
					new WEAPON(1, 0, 147, 76) },

			{ new WEAPON(12, HALBERDDRAW, 183, 62), new WEAPON(12, HALBERDDRAW + 1, 166, 10),
					new WEAPON(12, HALBERDDRAW + 2, 173, 29), new WEAPON(12, HALBERDDRAW + 3, 114, 35),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, ZHALBERDATTACK, 245, 30),
					new WEAPON(1, 0, 147, 76) }

	};

	public static final WEAPON[][] readyanimtics = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 180), new WEAPON(10, RFIST, 216, 170), new WEAPON(10, RFIST, 216, 160),
					new WEAPON(10, RFIST, 216, 150), new WEAPON(10, RFIST, 216, 140), new WEAPON(10, RFIST, 216, 130),
					new WEAPON(10, RFIST, 216, 124), new WEAPON(1, RFIST, 216, 124), new WEAPON(1, RFIST, 216, 124),
					new WEAPON(1, RFIST, 216, 122), new WEAPON(1, RFIST, 216, 122), new WEAPON(1, RFIST, 216, 122),
					new WEAPON(1, 0, 147, 76) },
			// KNIFE
			{ new WEAPON(10, KNIFEREADY, 69, 171), new WEAPON(10, KNIFEREADY + 1, 11, 146),
					new WEAPON(10, KNIFEREADY + 2, 25, 146), new WEAPON(10, KNIFEREADY + 3, 35, 158),
					new WEAPON(10, KNIFEREADY + 4, 38, 158), new WEAPON(10, KNIFEREADY + 5, 16, 157),
					new WEAPON(10, KNIFEREADY + 6, 37, 102), new WEAPON(10, KNIFEREADY + 7, 239, 63),
					new WEAPON(10, KNIFEREADY + 8, 214, 85), new WEAPON(10, KNIFEREADY + 9, 206, 110),
					new WEAPON(10, KNIFEREADY + 10, 217, 108), new WEAPON(10, KNIFEREADY + 11, 204, 95),
					new WEAPON(1, 0, 147, 76) },
			// GOBSWORD
			{ new WEAPON(12, GOBSWORDPULL, 79, 169), new WEAPON(12, GOBSWORDPULL + 1, 95, 115),
					new WEAPON(12, GOBSWORDPULL + 2, 94, 93), new WEAPON(12, GOBSWORDPULL + 3, 156, 77),
					new WEAPON(12, GOBSWORDPULL + 4, 218, 64), new WEAPON(12, GOBSWORDPULL + 5, 224, 57),
					new WEAPON(8, GOBSWORDPULL + 6, 251, 54), new WEAPON(1, GOBSWORDPULL + 7, 243, 92),
					new WEAPON(1, GOBSWORDPULL + 7, 243, 92), new WEAPON(1, GOBSWORDPULL + 7, 243, 92),
					new WEAPON(1, GOBSWORDPULL + 7, 243, 92), new WEAPON(1, GOBSWORDPULL + 7, 243, 92),
					new WEAPON(1, 0, 147, 76) },
			// MORNINGSTAR
			{ new WEAPON(6, MORNINGSTAR, 193, 190), new WEAPON(6, MORNINGSTAR, 193, 180),
					new WEAPON(6, MORNINGSTAR, 193, 170), new WEAPON(6, MORNINGSTAR, 193, 160),
					new WEAPON(6, MORNINGSTAR, 193, 150), new WEAPON(6, MORNINGSTAR, 193, 140),
					new WEAPON(6, MORNINGSTAR, 193, 130), new WEAPON(6, MORNINGSTAR, 193, 120),
					new WEAPON(6, MORNINGSTAR, 193, 110), new WEAPON(6, MORNINGSTAR, 193, 100),
					new WEAPON(6, MORNINGSTAR, 193, 90), new WEAPON(1, MORNINGSTAR, 193, 90),
					new WEAPON(1, 0, 147, 76) },
			// SWORD
			{ new WEAPON(10, SWORDPULL, 58, 160), new WEAPON(10, SWORDPULL + 1, 81, 111),
					new WEAPON(10, SWORDPULL + 2, 19, 88), new WEAPON(10, SWORDPULL + 3, 0, 93),
					new WEAPON(10, SWORDPULL + 4, 104, 0), new WEAPON(10, SWORDPULL + 5, 169, 0),
					new WEAPON(10, SWORDPULL + 6, 244, 38), new WEAPON(6, SWORDPULL + 7, 225, 121),
					new WEAPON(1, SWORDPULL + 7, 225, 121), new WEAPON(1, SWORDPULL + 7, 225, 121),
					new WEAPON(1, SWORDPULL + 7, 225, 121), new WEAPON(1, SWORDPULL + 7, 225, 121),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(12, BIGAXEDRAW, 71, 108), new WEAPON(12, BIGAXEDRAW + 1, 17, 58),
					new WEAPON(12, BIGAXEDRAW + 2, 0, 56), new WEAPON(12, BIGAXEDRAW + 3, 0, 71),
					new WEAPON(12, BIGAXEDRAW + 4, 0, 102), new WEAPON(12, BIGAXEDRAW + 5, 0, 11),
					new WEAPON(12, BIGAXEDRAW + 6, 33, 0), new WEAPON(12, BIGAXEDRAW + 7, 69, 0),
					new WEAPON(12, BIGAXEDRAW + 8, 75, 20), new WEAPON(12, BIGAXEDRAW9, 150, 92),
					new WEAPON(12, BIGAXEDRAW10, 182, 116), new WEAPON(1, 0, 200, 122), new WEAPON(1, 0, 147, 76) },
			// BOW
			{ new WEAPON(12, BOWREADY, 0, 0), new WEAPON(12, BOWREADY + 1, 0, 20), new WEAPON(12, BOWREADY + 2, 0, 46),
					new WEAPON(12, BOWREADY + 3, 0, 26), new WEAPON(12, BOWREADY + 4, 0, 0),
					new WEAPON(12, BOWREADY + 5, 71, 0), new WEAPON(8, BOWREADYEND, 77, 23),
					new WEAPON(1, BOWREADYEND, 77, 23), new WEAPON(1, BOWREADYEND, 77, 23),
					new WEAPON(1, BOWREADYEND, 77, 23), new WEAPON(1, BOWREADYEND, 77, 23),
					new WEAPON(1, BOWREADYEND, 77, 23), new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(8, PIKEDRAW, 0, 156), new WEAPON(8, PIKEDRAW + 1, 15, 98), new WEAPON(8, PIKEDRAW + 2, 83, 49),
					new WEAPON(8, PIKEDRAW + 3, 144, 66), new WEAPON(8, PIKEDRAW + 4, 197, 99),
					new WEAPON(8, PIKEDRAW + 5, 216, 131), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(12, EXCALDRAW, 167, 130), new WEAPON(12, EXCALDRAW + 1, 70, 117),
					new WEAPON(12, EXCALDRAW + 2, 0, 128), new WEAPON(12, EXCALDRAW + 3, 0, 150),
					new WEAPON(12, EXCALDRAW + 4, 4, 72), new WEAPON(12, EXCALDRAW + 5, 38, 81),
					new WEAPON(12, EXCALDRAW + 6, 0, 44), new WEAPON(12, EXCALDRAW + 7, 112, 0),
					new WEAPON(12, EXCALDRAW + 8, 224, 0), new WEAPON(12, EXCALDRAW + 9, 198, 84),
					new WEAPON(12, EXCALDRAW + 10, 186, 120), new WEAPON(12, EXCALDRAW + 11, 188, 123),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(12, HALBERDDRAW, 183, 62), new WEAPON(12, HALBERDDRAW + 1, 166, 10),
					new WEAPON(12, HALBERDDRAW + 2, 173, 29), new WEAPON(12, HALBERDDRAW + 3, 114, 35),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, HALBERDATTACK1, 245, 22), new WEAPON(1, HALBERDATTACK1, 245, 22),
					new WEAPON(1, 0, 147, 76) } };

	public static final WEAPON[][] weaponanimtics = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 120), new WEAPON(10, RFIST + 1, 166, 113), new WEAPON(10, RFIST + 2, 156, 129),
					new WEAPON(10, RFIST + 3, 169, 151), new WEAPON(10, RFIST + 4, 153, 124),
					new WEAPON(10, RFIST + 5, 224, 133), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// KNIFE
			{ new WEAPON(8, KNIFEATTACK, 189, 52), new WEAPON(8, KNIFEATTACK + 1, 254, 68), new WEAPON(8, 0, 147, 76),
					new WEAPON(8, 0, 80, 41), new WEAPON(8, KNIFEATTACK + 2, 254, 69),
					new WEAPON(8, KNIFEATTACK + 3, 218, 80), new WEAPON(8, KNIFEATTACK + 4, 137, 83),
					new WEAPON(8, KNIFEATTACK + 5, 136, 100), new WEAPON(8, KNIFEATTACK + 6, 126, 140),
					new WEAPON(8, KNIFEATTACK + 5, 136, 100), new WEAPON(8, KNIFEATTACK + 4, 137, 83),
					new WEAPON(8, KNIFEATTACK, 189, 52) },
			// GOBLINATTACK
			{ new WEAPON(10, GOBSWORDATTACK, 243, 92), new WEAPON(10, GOBSWORDATTACK + 1, 255, 68),
					new WEAPON(10, GOBSWORDATTACK + 2, 279, 65), new WEAPON(10, GOBSWORDATTACK + 3, 238, 55),
					new WEAPON(10, GOBSWORDATTACK + 4, 153, 52), new WEAPON(10, GOBSWORDATTACK + 5, 129, 152),
					new WEAPON(10, GOBSWORDATTACK + 6, 90, 184), new WEAPON(1, 0, 297, 169), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// MORNINGSTAR
			{ new WEAPON(12, MORNINGSTAR, 193, 90), new WEAPON(12, MORNINGSTAR + 1, 102, 133),
					new WEAPON(12, MORNINGSTAR + 2, 77, 164), new WEAPON(12, MORNINGSTAR + 3, 239, 86),
					new WEAPON(12, 0, 299, 86), new WEAPON(12, 0, 107, 52), new WEAPON(12, MORNINGSTAR + 4, 197, 24),
					new WEAPON(12, MORNINGSTAR + 5, 125, 124), new WEAPON(12, MORNINGSTAR + 6, 109, 191),
					new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52), new WEAPON(1, 0, 147, 76) },
			// SWORD
			{ new WEAPON(8, SWORDATTACK, 229, 123), new WEAPON(8, SWORDATTACK + 1, 221, 87),
					new WEAPON(8, SWORDATTACK + 2, 193, 21), new WEAPON(8, SWORDATTACK + 3, 173, 0),
					new WEAPON(8, SWORDATTACK + 4, 61, 0), new WEAPON(8, SWORDATTACK + 5, 33, 48),
					new WEAPON(8, SWORDATTACK + 6, 126, 131), new WEAPON(8, SWORDATTACK + 7, 297, 164),
					new WEAPON(3, 0, 147, 76), new WEAPON(3, 0, 80, 41), new WEAPON(3, 0, 107, 52),
					new WEAPON(3, 0, 147, 76) },
			{ new WEAPON(12, BIGAXEATTACK, 184, 123), new WEAPON(12, BIGAXEATTACK + 1, 223, 112),
					new WEAPON(12, BIGAXEATTACK + 2, 63, 151), new WEAPON(12, BIGAXEATTACK + 3, 91, 133),
					new WEAPON(12, BIGAXEATTACK + 4, 127, 138), new WEAPON(12, BIGAXEATTACK + 5, 106, 128),
					new WEAPON(12, BIGAXEATTACK + 6, 117, 49), new WEAPON(12, BIGAXEATTACK + 7, 140, 0),
					new WEAPON(12, BIGAXEATTACK + 8, 152, 47), new WEAPON(12, BIGAXEATTACK + 9, 166, 143),
					new WEAPON(12, 0, 107, 52), new WEAPON(1, 0, 147, 76) },
			// BOW
			{ new WEAPON(8, BOWWALK, 75, 13), new WEAPON(8, BOWWALK + 1, 90, 0), new WEAPON(8, BOWWALK + 2, 70, 0),
					new WEAPON(8, BOWWALK + 3, 70, 0), new WEAPON(6, BOWWALK + 4, 70, 0),
					new WEAPON(4, BOWWALK + 5, 70, 0), new WEAPON(1, 0, 126, 131), new WEAPON(1, 0, 297, 164),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(10, PIKEDRAW + 5, 216, 131), new WEAPON(10, 0, 80, 41), new WEAPON(10, 0, 107, 52),
					new WEAPON(10, 0, 147, 76), new WEAPON(10, PIKEATTACK1, 0, 47),
					new WEAPON(10, PIKEATTACK1 + 1, 0, 0), new WEAPON(10, PIKEATTACK1 + 2, 0, 0),
					new WEAPON(10, PIKEATTACK1 + 3, 73, 0), new WEAPON(10, PIKEATTACK1 + 4, 130, 27),
					new WEAPON(10, PIKEATTACK1 + 5, 138, 125), new WEAPON(12, 0, 80, 41), new WEAPON(1, 0, 107, 52) },
			{ new WEAPON(8, EXCALATTACK1, 98, 133), new WEAPON(8, EXCALATTACK1 + 1, 123, 130),
					new WEAPON(8, EXCALATTACK1 + 2, 125, 128), new WEAPON(8, EXCALATTACK1 + 3, 115, 82),
					new WEAPON(8, EXCALATTACK1 + 4, 115, 6), new WEAPON(8, EXCALATTACK1 + 5, 178, 0),
					new WEAPON(8, EXCALATTACK1 + 6, 155, 0), new WEAPON(8, EXCALATTACK1 + 7, 143, 0),
					new WEAPON(8, EXCALATTACK1 + 8, 90, 91), new WEAPON(8, EXCALATTACK1 + 9, 30, 159),
					new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52) },
			{ new WEAPON(12, HALBERDATTACK1, 245, 22), new WEAPON(12, 0, 107, 52), new WEAPON(12, 0, 147, 76),
					new WEAPON(12, HALBERDATTACK1 + 1, 249, 45), new WEAPON(12, HALBERDATTACK1 + 2, 161, 60),
					new WEAPON(12, HALBERDATTACK1 + 3, 45, 88), new WEAPON(12, 0, 80, 41),
					new WEAPON(12, HALBERDATTACK1 + 3, 45, 88), new WEAPON(12, HALBERDATTACK1 + 2, 161, 60),
					new WEAPON(12, HALBERDATTACK1 + 1, 249, 45), new WEAPON(12, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) } };

	public static final WEAPON[][] zweaponanimtics = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 120), new WEAPON(10, RFIST + 1, 166, 113), new WEAPON(10, RFIST + 2, 156, 129),
					new WEAPON(10, RFIST + 3, 169, 151), new WEAPON(10, RFIST + 4, 153, 124),
					new WEAPON(10, RFIST + 5, 224, 133), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// ZKNIFE
			{ new WEAPON(8, ZKNIFEATTACK, 189, 52), new WEAPON(8, ZKNIFEATTACK + 1, 254, 68),
					new WEAPON(16, 0, 147, 76), new WEAPON(8, ZKNIFEATTACK + 1, 254, 68),
					new WEAPON(8, ZKNIFEATTACK + 2, 218, 80), new WEAPON(8, ZKNIFEATTACK + 3, 137, 83),
					new WEAPON(8, ZKNIFEATTACK + 4, 136, 100), new WEAPON(8, ZKNIFEATTACK + 5, 126, 140),
					new WEAPON(8, ZKNIFEATTACK + 4, 136, 100), new WEAPON(8, ZKNIFEATTACK + 3, 137, 83),
					new WEAPON(8, ZKNIFEATTACK + 2, 218, 80), new WEAPON(1, ZKNIFEATTACK, 189, 52) },
			// ZSHORTATTACK
			{ new WEAPON(10, ZSHORTATTACK, 243, 68), new WEAPON(10, ZSHORTATTACK + 4, 255, 50),
					new WEAPON(10, ZSHORTATTACK + 5, 279, 66), new WEAPON(10, ZSHORTATTACK + 6, 238, 52),
					new WEAPON(10, ZSHORTATTACK + 7, 181, 49), new WEAPON(10, ZSHORTATTACK + 8, 129, 141),
					new WEAPON(1, 0, 90, 184), new WEAPON(1, 0, 297, 169), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// ZSTARATTACK
			{ new WEAPON(12, ZSTARATTACK, 193, 90), new WEAPON(12, ZSTARATTACK + 3, 102, 128),
					new WEAPON(12, ZSTARATTACK + 4, 77, 159), new WEAPON(12, ZSTARATTACK + 5, 239, 79),
					new WEAPON(12, 0, 299, 86), new WEAPON(12, 0, 107, 52), new WEAPON(12, ZSTARATTACK + 6, 175, 19),
					new WEAPON(12, ZSTARATTACK + 7, 125, 124), new WEAPON(12, ZSTARATTACK + 8, 109, 187),
					new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52), new WEAPON(1, 0, 147, 76) },
			// SWORD
			{ new WEAPON(8, SWORDATTACK, 229, 123), new WEAPON(8, SWORDATTACK + 1, 221, 87),
					new WEAPON(8, SWORDATTACK + 2, 193, 21), new WEAPON(8, SWORDATTACK + 3, 173, 0),
					new WEAPON(8, SWORDATTACK + 4, 61, 0), new WEAPON(8, SWORDATTACK + 5, 33, 48),
					new WEAPON(8, SWORDATTACK + 6, 126, 131), new WEAPON(8, SWORDATTACK + 7, 297, 164),
					new WEAPON(3, 0, 147, 76), new WEAPON(3, 0, 80, 41), new WEAPON(3, 0, 107, 52),
					new WEAPON(3, 0, 147, 76) },
			// ZAXEATTACK
			{ new WEAPON(6, ZAXEATTACK, 179, 117), new WEAPON(6, ZAXEATTACK + 6, 217, 107),
					new WEAPON(6, ZAXEATTACK + 7, 106, 146), new WEAPON(6, ZAXEATTACK + 8, 94, 128),
					new WEAPON(6, ZAXEATTACK + 9, 123, 132), new WEAPON(6, ZAXEATTACK + 10, 102, 134),
					new WEAPON(6, ZAXEATTACK + 11, 112, 45), new WEAPON(6, ZAXEATTACK + 12, 102, 0),
					new WEAPON(6, ZAXEATTACK + 13, 68, 42), new WEAPON(6, ZAXEATTACK + 14, 42, 138),
					new WEAPON(6, 0, 107, 52), new WEAPON(1, 0, 147, 76) },
			// ZBOW
			{ new WEAPON(8, ZBOWWALK, 75, 13), new WEAPON(8, ZBOWATTACK, 90, 0), new WEAPON(8, ZBOWATTACK + 1, 70, 0),
					new WEAPON(8, ZBOWATTACK + 2, 70, 0), new WEAPON(6, ZBOWATTACK + 3, 70, 0),
					new WEAPON(4, ZBOWATTACK + 4, 70, 0), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, 0, 147, 76) },
			// ZPIKE
			{ new WEAPON(10, ZPIKEREADY + 5, 210, 127), new WEAPON(10, 0, 80, 41), new WEAPON(10, 0, 107, 52),
					new WEAPON(10, 0, 147, 76), new WEAPON(10, ZPIKEATTACK, 0, 43),
					new WEAPON(10, ZPIKEATTACK + 1, 0, 0), new WEAPON(10, ZPIKEATTACK + 2, 0, 0),
					new WEAPON(10, ZPIKEATTACK + 3, 45, 0), new WEAPON(10, ZPIKEATTACK + 4, 51, 23),
					new WEAPON(10, ZPIKEATTACK + 5, 59, 121), new WEAPON(12, 0, 80, 41), new WEAPON(1, 0, 107, 52) },
			{ new WEAPON(8, ZTWOHANDATTACK, 98, 133), new WEAPON(8, ZTWOHANDATTACK + 6, 115, 130),
					new WEAPON(8, ZTWOHANDATTACK + 7, 125, 128), new WEAPON(8, ZTWOHANDATTACK + 8, 116, 82),
					new WEAPON(8, ZTWOHANDATTACK + 9, 117, 9), new WEAPON(8, ZTWOHANDATTACK + 10, 180, 0),
					new WEAPON(8, ZTWOHANDATTACK + 11, 174, 0), new WEAPON(8, ZTWOHANDATTACK + 12, 166, 0),
					new WEAPON(8, ZTWOHANDATTACK + 13, 125, 90), new WEAPON(8, ZTWOHANDATTACK + 14, 83, 166),
					new WEAPON(1, 0, 30, 159), new WEAPON(1, 0, 80, 41) },
			{ new WEAPON(12, ZHALBERDATTACK, 245, 30), new WEAPON(12, 0, 107, 52), new WEAPON(12, 0, 147, 76),
					new WEAPON(12, HALBERDATTACK1 + 1, 249, 45), new WEAPON(12, HALBERDATTACK1 + 2, 161, 60),
					new WEAPON(12, HALBERDATTACK1 + 3, 45, 88), new WEAPON(12, 0, 80, 41),
					new WEAPON(12, HALBERDATTACK1 + 3, 45, 88), new WEAPON(12, HALBERDATTACK1 + 2, 161, 60),
					new WEAPON(12, HALBERDATTACK1 + 1, 249, 45), new WEAPON(12, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) } };

	// SCOTT
	public static final WEAPON[][] zlefthandanimtics = {
			{ new WEAPON(10, RFIST, 15, 121), new WEAPON(10, RFIST + 1, 17, 114), new WEAPON(10, RFIST + 2, 54, 131),
					new WEAPON(10, RFIST + 3, 76, 152), new WEAPON(10, RFIST + 4, 31, 126),
					new WEAPON(10, RFIST + 5, 26, 135), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// KNIFE
			{ new WEAPON(8, KNIFEATTACK2, 0, 113), new WEAPON(8, KNIFEATTACK2 + 1, 44, 111),
					new WEAPON(8, KNIFEATTACK2 + 2, 119, 137), new WEAPON(8, KNIFEATTACK2 + 3, 187, 159),
					new WEAPON(16, 0, 136, 100), new WEAPON(8, KNIFEATTACK2 + 3, 187, 159),
					new WEAPON(8, KNIFEATTACK2 + 2, 119, 137), new WEAPON(8, KNIFEATTACK2 + 1, 44, 111),
					new WEAPON(8, KNIFEATTACK2, 0, 113), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// ZSHORTATTACK
			{ new WEAPON(10, ZSHORTATTACK, 255, 50), new WEAPON(10, ZSHORTATTACK + 1, 279, 66),
					new WEAPON(10, ZSHORTATTACK + 2, 238, 52), new WEAPON(10, ZSHORTATTACK + 3, 181, 49),
					new WEAPON(10, ZSHORTATTACK + 4, 129, 141), new WEAPON(10, ZSHORTATTACK + 5, 70, 93),
					new WEAPON(10, 0, 90, 184), new WEAPON(1, 0, 297, 169), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// ZSTARATTACK2
			{ new WEAPON(12, ZSTARATTACK2, 38, 141), new WEAPON(12, ZSTARATTACK2 + 1, 0, 111),
					new WEAPON(12, ZSTARATTACK2 + 2, 0, 91), new WEAPON(12, ZSTARATTACK2 + 3, 0, 47),
					new WEAPON(12, 0, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24),
					new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24),
					new WEAPON(1, 0, 0, 24) },
			// ZSHORTATTACK2
			{ new WEAPON(10, ZSHORTATTACK2, 238, 99), new WEAPON(10, ZSHORTATTACK2 + 1, 202, 11),
					new WEAPON(10, ZSHORTATTACK2 + 2, 182, 0), new WEAPON(10, ZSHORTATTACK2 + 3, 79, 13),
					new WEAPON(10, ZSHORTATTACK2 + 4, 79, 13), new WEAPON(10, ZSHORTATTACK2 + 5, 119, 123),
					new WEAPON(10, ZSHORTATTACK2 + 6, 295, 179), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) } };
	public static final WEAPON[][] weaponanimtics2 = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 120), new WEAPON(10, RFIST + 1, 166, 113), new WEAPON(10, RFIST + 2, 156, 129),
					new WEAPON(10, RFIST + 3, 169, 151), new WEAPON(10, RFIST + 4, 153, 124),
					new WEAPON(10, RFIST + 5, 224, 133), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// KNIFE
			{ new WEAPON(8, KNIFEATTACK, 189, 52), new WEAPON(8, KNIFEATTACK + 1, 254, 68), new WEAPON(16, 0, 147, 76),
					new WEAPON(8, KNIFEATTACK2, 206, 114), new WEAPON(8, KNIFEATTACK2 + 1, 107, 112),
					new WEAPON(8, KNIFEATTACK2 + 2, 22, 138), new WEAPON(8, KNIFEATTACK2 + 3, 0, 161),
					new WEAPON(16, 0, 136, 100), new WEAPON(8, KNIFEATTACK2 + 3, 0, 161),
					new WEAPON(8, KNIFEATTACK2 + 2, 22, 138), new WEAPON(8, KNIFEATTACK2 + 1, 107, 112),
					new WEAPON(8, KNIFEATTACK2, 206, 114) },
			// GOBLINATTACK
			{ new WEAPON(10, GOBSWORDATTACK2, 236, 99), new WEAPON(10, GOBSWORDATTACK2 + 1, 202, 24),
					new WEAPON(10, GOBSWORDATTACK2 + 2, 181, 0), new WEAPON(10, GOBSWORDATTACK2 + 3, 52, 12),
					new WEAPON(10, GOBSWORDATTACK2 + 4, 72, 72), new WEAPON(10, GOBSWORDATTACK2 + 5, 134, 139),
					new WEAPON(10, GOBSWORDATTACK2 + 6, 297, 169), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// MORNINGATTACK2
			{ new WEAPON(12, MORNINGATTACK2, 85, 136), new WEAPON(12, MORNINGATTACK2 + 1, 34, 110),
					new WEAPON(12, MORNINGATTACK2 + 2, 32, 91), new WEAPON(12, MORNINGATTACK2 + 3, 186, 47),
					new WEAPON(12, MORNINGATTACK2 + 4, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// SWORD
			{ new WEAPON(8, SWORDATTACK2 + 1, 195, 63), new WEAPON(8, SWORDATTACK2 + 2, 250, 54),
					new WEAPON(8, SWORDATTACK2 + 3, 275, 37), new WEAPON(16, 0, 61, 0),
					new WEAPON(8, SWORDATTACK2 + 4, 229, 66), new WEAPON(8, SWORDATTACK2 + 5, 185, 0),
					new WEAPON(8, SWORDATTACK2 + 6, 158, 115), new WEAPON(8, SWORDATTACK2 + 7, 57, 163),
					new WEAPON(1, 0, 57, 163), new WEAPON(1, 0, 57, 163), new WEAPON(1, 0, 57, 163),
					new WEAPON(1, 0, 57, 163) },
			{ new WEAPON(12, BIGAXEATTACK2, 200, 111), new WEAPON(12, BIGAXEATTACK2 + 1, 5, 136),
					new WEAPON(12, BIGAXEATTACK2 + 2, 69, 162), new WEAPON(12, BIGAXEATTACK2 + 3, 147, 164),
					new WEAPON(12, BIGAXEATTACK2 + 4, 76, 152), new WEAPON(12, BIGAXEATTACK2 + 5, 33, 95),
					new WEAPON(12, BIGAXEATTACK2 + 6, 0, 91), new WEAPON(12, BIGAXEATTACK2 + 7, 0, 98),
					new WEAPON(12, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// BOW
			{ new WEAPON(8, BOWWALK, 75, 13), new WEAPON(8, BOWWALK + 1, 90, 0), new WEAPON(8, BOWWALK + 2, 70, 0),
					new WEAPON(8, BOWWALK + 3, 70, 0), new WEAPON(6, BOWWALK + 4, 70, 0),
					new WEAPON(4, BOWWALK + 5, 70, 0), new WEAPON(1, 0, 126, 131), new WEAPON(1, 0, 297, 164),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(10, PIKEATTACK2, 266, 147), new WEAPON(10, PIKEATTACK2 + 1, 182, 117),
					new WEAPON(10, PIKEATTACK2 + 2, 123, 84), new WEAPON(10, PIKEATTACK2 + 3, 7, 48),
					new WEAPON(10, PIKEATTACK2 + 4, 0, 83), new WEAPON(10, PIKEATTACK2 + 5, 0, 158),
					new WEAPON(10, PIKEATTACK2 + 6, 25, 117), new WEAPON(10, PIKEATTACK2 + 7, 139, 93),
					new WEAPON(10, PIKEATTACK2 + 8, 234, 75), new WEAPON(8, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(8, EXCALATTACK2, 0, 143), new WEAPON(8, EXCALATTACK2 + 1, 0, 103),
					new WEAPON(8, EXCALATTACK2 + 2, 0, 70), new WEAPON(8, EXCALATTACK2 + 3, 48, 0),
					new WEAPON(8, EXCALATTACK2 + 4, 67, 0), new WEAPON(8, EXCALATTACK2 + 5, 78, 21),
					new WEAPON(8, EXCALATTACK2 + 6, 165, 107), new WEAPON(8, EXCALATTACK2 + 7, 260, 168),
					new WEAPON(1, 0, 130, 27), new WEAPON(1, 0, 138, 125), new WEAPON(1, 0, 80, 41),
					new WEAPON(1, 0, 107, 52) },
			{ new WEAPON(12, HALBERDATTACK1, 245, 22), new WEAPON(12, HALBERDATTACK2, 114, 35),
					new WEAPON(12, HALBERDATTACK2 + 1, 105, 87), new WEAPON(12, HALBERDATTACK2 + 2, 54, 107),
					new WEAPON(12, HALBERDATTACK2 + 3, 48, 102), new WEAPON(1, HALBERDATTACK2 + 3, 48, 102),
					new WEAPON(1, HALBERDATTACK2 + 3, 48, 102), new WEAPON(12, HALBERDATTACK2 + 2, 54, 107),
					new WEAPON(12, HALBERDATTACK2 + 1, 105, 87), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) } };

	// SCOTT
	public static final WEAPON[][] zweaponanimtics2 = {
			// FIST
			{ new WEAPON(10, RFIST, 216, 120), new WEAPON(10, RFIST + 1, 166, 113), new WEAPON(10, RFIST + 2, 156, 129),
					new WEAPON(10, RFIST + 3, 169, 151), new WEAPON(10, RFIST + 4, 153, 124),
					new WEAPON(10, RFIST + 5, 224, 133), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// ZKNIFE
			{ new WEAPON(8, ZKNIFEATTACK, 189, 52), new WEAPON(8, ZKNIFEATTACK + 1, 254, 68),
					new WEAPON(16, 0, 147, 76), new WEAPON(8, ZKNIFEATTACK2, 206, 114),
					new WEAPON(8, ZKNIFEATTACK2 + 1, 107, 112), new WEAPON(8, ZKNIFEATTACK2 + 2, 22, 138),
					new WEAPON(8, ZKNIFEATTACK2 + 3, 0, 161), new WEAPON(16, 0, 136, 100),
					new WEAPON(8, KNIFEATTACK2 + 3, 0, 161), new WEAPON(8, ZKNIFEATTACK2 + 2, 22, 138),
					new WEAPON(8, ZKNIFEATTACK2 + 1, 107, 112), new WEAPON(8, KNIFEATTACK2, 206, 114) },
			// ZSHORTATTACK2
			{ new WEAPON(10, ZSHORTATTACK2, 238, 99), new WEAPON(10, ZSHORTATTACK2 + 1, 202, 11),
					new WEAPON(10, ZSHORTATTACK2 + 2, 182, 0), new WEAPON(10, ZSHORTATTACK2 + 3, 79, 13),
					new WEAPON(10, ZSHORTATTACK2 + 4, 40, 45), new WEAPON(10, ZSHORTATTACK2 + 5, 119, 123),
					new WEAPON(10, ZSHORTATTACK2 + 6, 295, 179), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// ZSTARATTACK2
			{ new WEAPON(12, ZSTARATTACK2, 44, 110), new WEAPON(12, ZSTARATTACK2 + 1, 26, 91),
					new WEAPON(12, ZSTARATTACK2 + 2, 177, 38), new WEAPON(12, ZSTARATTACK2 + 3, 262, 11),
					new WEAPON(12, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// SWORD
			{ new WEAPON(8, SWORDATTACK2 + 1, 195, 63), new WEAPON(8, SWORDATTACK2 + 2, 250, 54),
					new WEAPON(8, SWORDATTACK2 + 3, 275, 37), new WEAPON(16, 0, 61, 0),
					new WEAPON(8, SWORDATTACK2 + 4, 229, 66), new WEAPON(8, SWORDATTACK2 + 5, 185, 0),
					new WEAPON(8, SWORDATTACK2 + 6, 158, 115), new WEAPON(8, SWORDATTACK2 + 7, 57, 163),
					new WEAPON(1, 0, 57, 163), new WEAPON(1, 0, 57, 163), new WEAPON(1, 0, 57, 163),
					new WEAPON(1, 0, 57, 163) },
			// ZAXEATTACK2
			{ new WEAPON(6, ZAXEATTACK2, 200, 111), new WEAPON(6, ZAXEATTACK2 + 1, 5, 136),
					new WEAPON(6, ZAXEATTACK2 + 2, 69, 162), new WEAPON(6, ZAXEATTACK2 + 3, 147, 164),
					new WEAPON(6, ZAXEATTACK2 + 4, 76, 152), new WEAPON(6, ZAXEATTACK2 + 5, 33, 95),
					new WEAPON(6, ZAXEATTACK2 + 6, 0, 91), new WEAPON(6, ZAXEATTACK2 + 7, 0, 98),
					new WEAPON(6, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			{ new WEAPON(8, ZBOWWALK, 75, 13), new WEAPON(8, ZBOWATTACK, 90, 0), new WEAPON(8, ZBOWATTACK + 1, 70, 0),
					new WEAPON(8, ZBOWATTACK + 2, 70, 0), new WEAPON(6, ZBOWATTACK + 3, 70, 0),
					new WEAPON(4, ZBOWATTACK + 4, 70, 0), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, ZBOWWALK, 75, 13),
					new WEAPON(1, ZBOWWALK, 75, 13), new WEAPON(1, 0, 147, 76) },

			// ZPIKEATTACK2
			{ new WEAPON(10, ZPIKEATTACK2, 266, 147), new WEAPON(10, ZPIKEATTACK2 + 1, 182, 117),
					new WEAPON(10, ZPIKEATTACK2 + 2, 123, 84), new WEAPON(10, ZPIKEATTACK2 + 3, 7, 48),
					new WEAPON(10, ZPIKEATTACK2 + 4, 0, 83), new WEAPON(10, ZPIKEATTACK2 + 5, 0, 158),
					new WEAPON(10, ZPIKEATTACK2 + 6, 25, 117), new WEAPON(10, ZPIKEATTACK2 + 7, 139, 93),
					new WEAPON(10, ZPIKEATTACK2 + 8, 234, 75), new WEAPON(8, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// ZTWOHANDATTACK2
			{ new WEAPON(8, ZTWOHANDATTACK2, 0, 143), new WEAPON(8, ZTWOHANDATTACK2 + 1, 0, 103),
					new WEAPON(8, ZTWOHANDATTACK2 + 2, 0, 70), new WEAPON(8, ZTWOHANDATTACK2 + 3, 41, 0),
					new WEAPON(8, ZTWOHANDATTACK2 + 4, 54, 0), new WEAPON(8, ZTWOHANDATTACK2 + 5, 166, 21),
					new WEAPON(8, ZTWOHANDATTACK2 + 6, 242, 108), new WEAPON(8, 0, 260, 168), new WEAPON(1, 0, 130, 27),
					new WEAPON(1, 0, 138, 125), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52) },
			// ZHALBERDATTACK2
			{ new WEAPON(12, HALBERDATTACK1, 245, 22), new WEAPON(12, HALBERDATTACK2, 114, 35),
					new WEAPON(12, HALBERDATTACK2 + 1, 105, 87), new WEAPON(12, HALBERDATTACK2 + 2, 54, 107),
					new WEAPON(12, HALBERDATTACK2 + 3, 48, 102), new WEAPON(1, HALBERDATTACK2 + 3, 48, 102),
					new WEAPON(1, HALBERDATTACK2 + 3, 48, 102), new WEAPON(12, HALBERDATTACK2 + 2, 54, 107),
					new WEAPON(12, HALBERDATTACK2 + 1, 105, 87), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) }

	};

	public static final WEAPON[][] lefthandanimtics = {
			{ new WEAPON(10, RFIST, 15, 121), new WEAPON(10, RFIST + 1, 17, 114), new WEAPON(10, RFIST + 2, 54, 131),
					new WEAPON(10, RFIST + 3, 76, 152), new WEAPON(10, RFIST + 4, 31, 126),
					new WEAPON(10, RFIST + 5, 26, 135), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// KNIFE
			{ new WEAPON(8, KNIFEATTACK2, 0, 113), new WEAPON(8, KNIFEATTACK2 + 1, 44, 111),
					new WEAPON(8, KNIFEATTACK2 + 2, 119, 137), new WEAPON(8, KNIFEATTACK2 + 3, 187, 159),
					new WEAPON(16, 0, 136, 100), new WEAPON(8, KNIFEATTACK2 + 3, 187, 159),
					new WEAPON(8, KNIFEATTACK2 + 2, 119, 137), new WEAPON(8, KNIFEATTACK2 + 1, 44, 111),
					new WEAPON(8, KNIFEATTACK2, 0, 113), new WEAPON(1, 0, 80, 41), new WEAPON(1, 0, 107, 52),
					new WEAPON(1, 0, 147, 76) },
			// GOBLINATTACK
			{ new WEAPON(10, GOBSWORDATTACK, 243, 92), new WEAPON(10, GOBSWORDATTACK + 1, 255, 68),
					new WEAPON(10, GOBSWORDATTACK + 2, 279, 65), new WEAPON(10, GOBSWORDATTACK + 3, 238, 55),
					new WEAPON(10, GOBSWORDATTACK + 4, 153, 52), new WEAPON(10, GOBSWORDATTACK + 5, 129, 152),
					new WEAPON(10, GOBSWORDATTACK + 6, 90, 184), new WEAPON(1, 0, 297, 169), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) },
			// MORNINGATTACK2
			{ new WEAPON(12, MORNINGATTACK2, 38, 142), new WEAPON(12, MORNINGATTACK2 + 1, 0, 111),
					new WEAPON(12, MORNINGATTACK2 + 2, 0, 91), new WEAPON(12, MORNINGATTACK2 + 3, 0, 47),
					new WEAPON(12, MORNINGATTACK2 + 4, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24),
					new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24), new WEAPON(1, 0, 0, 24),
					new WEAPON(1, 0, 0, 24) },
			// GOBLINATTACK2
			{ new WEAPON(10, GOBSWORDATTACK2, 236, 99), new WEAPON(10, GOBSWORDATTACK2 + 1, 202, 24),
					new WEAPON(10, GOBSWORDATTACK2 + 2, 181, 0), new WEAPON(10, GOBSWORDATTACK2 + 3, 52, 12),
					new WEAPON(10, GOBSWORDATTACK2 + 4, 72, 72), new WEAPON(10, GOBSWORDATTACK2 + 5, 134, 139),
					new WEAPON(10, GOBSWORDATTACK2 + 6, 297, 169), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24),
					new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24), new WEAPON(1, 0, 275, 24) } };

	public static boolean checkmedusadist(int i, int x, int y, int z, int lvl) {
		int attackdist = (game.WH2 ? 8192 : 1024) + (lvl << 9);

		if ((klabs(x - sprite[i].x) + klabs(y - sprite[i].y) < attackdist)
				&& (klabs((z >> 8) - ((sprite[i].z >> 8) - (engine.getTile(sprite[i].picnum).getHeight() >> 1))) <= 120))
			return true;
		else
			return false;
	}

	public static void autoweaponchange(PLAYER plr, int dagun) {
		if (plr.currweaponanim > 0 || dagun == plr.selectedgun || plr.currweaponflip > 0)
			return;

		plr.selectedgun = dagun;
		plr.hasshot = 0;
		plr.currweaponfired = 2; // drop weapon

		if (enchantedsoundhandle != -1) {
             SND_StopLoop(enchantedsoundhandle);
             enchantedsoundhandle=-1;
        }
		switch (plr.selectedgun) {
		case 0:
			weapondropgoal = 40;
			weapondrop = 0;
		case 1:
			weapondropgoal = 100;
			weapondrop = 0;
			break;
		case 2:
			if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
				enchantedsoundhandle = playsound(S_FIREWEAPONLOOP, 0, 0, -1);
			}
			weapondropgoal = (game.WH2 ? 40 : 100);
			weapondrop = 0;
			break;
		case 3:
			if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
				enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
			}
			weapondropgoal = 100;
			weapondrop = 0;
			break;
		case 4:
			weapondropgoal = 40;
			weapondrop = 0;
			break;
		case 5:
			if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
				enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
			}
			weapondropgoal = 40;
			weapondrop = 0;
			break;
		case 6:
			if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
				enchantedsoundhandle = playsound(S_FIREWEAPONLOOP, 0, 0, -1);
			}
			weapondropgoal = 40;
			weapondrop = 0;
			if (plr.ammo[6] < 0)
				plr.ammo[6] = 0;
			break;
		case 7:
			if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
				enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
			}
			weapondropgoal = 40;
			weapondrop = 0;
			if (plr.weapon[7] == 2) {
				if (plr.ammo[7] < 0)
					plr.ammo[7] = 0;
			}
			break;
		case 8:
			weapondropgoal = 40;
			weapondrop = 0;
			break;
		case 9:
			weapondropgoal = 40;
			weapondrop = 0;
			break;
		}
	}

	public static void weaponchange(int snum) {
		PLAYER plr = player[snum];
		if (plr.currweaponanim == 0 && plr.currweaponflip == 0) {
			int bits = plr.pInput.bits;
			int key = ((bits & (15 << 8)) >> 8) - 1;
			if (key != -1 && key < 12) {
				if (key == 10 || key == 11) {
					int k = plr.currweapon;
					key = (key == 10 ? -1 : 1);
					while (k >= 0 && k < 10) {
						k += key;

						if (k == -1)
							k = 9;
						else if (k == 10)
							k = 0;

						if (plr.weapon[k] > 0) {
							key = k;
							break;
						}
					}
				}
				int gun = key;
				if (plr.weapon[gun] > 0) {
					if (plr.currweaponanim <= 0 && gun != plr.selectedgun && plr.currweaponflip <= 0) {
						if (enchantedsoundhandle != -1) {
							SND_StopLoop(enchantedsoundhandle);
							enchantedsoundhandle = -1;
						}
					}

					autoweaponchange(plr, gun);
				}
			}
		}
	}

	public static void plrfireweapon(PLAYER plr) {
		if (plr.currweaponfired == 4) {
			if (game.WH2) {
				plr.currweapontics = wh2throwanimtics[plr.currentorb][0].daweapontics;
			} else
				plr.currweapontics = throwanimtics[plr.currentorb][0].daweapontics;
			return;
		}

		if (plr.ammo[plr.selectedgun] <= 0) {
			if (plr.currweapon == 6) {
				for (int i = 0; i < MAXWEAPONS; i++) {
					if (plr.ammo[i] > 0 && plr.weapon[i] == 1) {
						plr.selectedgun = i;
						plr.hasshot = 0;
						plr.currweaponfired = 2; // drop weapon
						weapondropgoal = 100;
						weapondrop = 0;
					}
				}
			}
			return;
		} else {
			madeahit = false;
			plr.ammo[plr.selectedgun]--;

			if (game.WH2 && plr.weapon[plr.selectedgun] == 3) {
				if (plr.ammo[plr.selectedgun] == 0) {
					plr.weapon[plr.selectedgun] = plr.preenchantedweapon[plr.selectedgun];
					plr.ammo[plr.selectedgun] = plr.preenchantedammo[plr.selectedgun];
					if (enchantedsoundhandle != -1) {
						SND_StopLoop(enchantedsoundhandle);
						enchantedsoundhandle = -1;
					}
				}
			}

			if (plr.ammo[plr.selectedgun] <= 0 || plr.ammo[plr.selectedgun] == 10) {
				switch (plr.selectedgun) {
				case 0: // fist
					plr.ammo[0] = 9999;
					break;
				case 1: // knife
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Dagger is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[1] = 0;
						plr.weapon[1] = 0;
						showmessage("Dagger is Useless", 360);
						weaponuseless = 1;
					}
					break;
				case 2: // short sword
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Short Sword is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[2] = 0;
						plr.weapon[2] = 0;
						showmessage("Short Sword is Useless", 360);
						weaponuseless = 1;
					}
					break;
				case 3: // mace
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Morning Star is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[3] = 0;
						plr.weapon[3] = 0;
						showmessage("Morning Star is Useless", 360);
						weaponuseless = 1;
					}
					break;

				case 4: // sword
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Sword is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[4] = 0;
						plr.weapon[4] = 0;
						showmessage("Sword is Useless", 360);
						weaponuseless = 1;
					}
					break;
				case 5: // battle axe
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Battle axe is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[5] = 0;
						plr.weapon[5] = 0;
						showmessage("Battle axe is Useless", 360);
						weaponuseless = 1;
					}
					break;
				case 6: // bow
					break;
				case 7: // pike
					if (plr.weapon[7] == 1) {
						if (plr.ammo[plr.selectedgun] == 10) {
							showmessage("Pike is damaged", 360);
						}
						if (plr.ammo[plr.selectedgun] <= 0) {
							plr.ammo[7] = 0;
							plr.weapon[7] = 0;
							showmessage("Pike is Useless", 360);
							weaponuseless = 1;
						}
					}
					if (plr.weapon[7] == 2 && plr.ammo[7] <= 0) {
						plr.weapon[7] = 1;
						plr.ammo[7] = 30;
					}
					break;
				case 8: // two handed sword
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Magic Sword is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[8] = 0;
						plr.weapon[8] = 0;
						showmessage("Magic Sword is Useless", 360);
						weaponuseless = 1;
					}
					break;
				case 9: // halberd
					if (plr.ammo[plr.selectedgun] == 10) {
						showmessage("Halberd is damaged", 360);
					}
					if (plr.ammo[plr.selectedgun] <= 0) {
						plr.ammo[9] = 0;
						plr.weapon[9] = 0;
						showmessage("Halberd is Useless", 360);
						weaponuseless = 1;
					}
					break;
				}
			}
		}

		if (weaponuseless == 1)
			for (int i = 0; i < MAXWEAPONS; i++) {
				if (plr.weapon[i] > 0 && plr.ammo[i] > 0) {
					plr.currweapon = plr.selectedgun = i;
					plr.currweaponfired = 3; // ready weapon
					plr.currweaponflip = 0;
					weaponuseless = 0;
				}
			}
		else
			plr.currweaponfired = 1;

		plr.currweapon = plr.selectedgun;

		plr.currweaponattackstyle = engine.krand() % 2;

		if (plr.weapon[7] == 2 && plr.currweapon == 7) {
			plr.currweaponattackstyle = 0;
		} else if (game.WH2 && plr.weapon[7] == 3 && plr.currweapon == 7) {
			plr.currweaponattackstyle = 0;
		}

		if (plr.currweapon == 9) {
			if (engine.krand() % 100 > 80)
				plr.currweaponattackstyle = 0;
			else
				plr.currweaponattackstyle = 1;
		}

		if (plr.currweaponanim > 11) {
			if (game.WH2) {
				if (plr.weapon[plr.currweapon] == 1)
					plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;
				else
					plr.currweapontics = zweaponanimtics[plr.currweapon][0].daweapontics;
			} else
				plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;
		}
	}

	public static void weaponsprocess(int snum) {
		PLAYER plr = player[snum];

		if (plr.shadowtime <= 0) {
			if (plr.weapon[plr.currweapon] == 3) {
				if (enchantedsoundhandle == -1 && plr.weapon[plr.selectedgun] == 3) {
					switch (plr.selectedgun) {
					case 2:
						enchantedsoundhandle = playsound(S_FIREWEAPONLOOP, 0, 0, -1);
						break;
					case 3:
					case 5:
						enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
						break;
					case 6:
						enchantedsoundhandle = playsound(S_FIREWEAPONLOOP, 0, 0, -1);
						break;
					case 7:
						enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
						break;
					case 8:
						enchantedsoundhandle = playsound(S_ENERGYWEAPONLOOP, 0, 0, -1);
						break;
					}
				}
			}
		}

		if (plr.currweapon == 0 && dahand == 0)
			if (engine.krand() % 2 == 0)
				dahand = 1;
			else
				dahand = 2;

		switch (plr.currweaponfired) {
		case 6:
			switch (plr.currweapon) {
			case 1: // knife
				if (plr.currweaponframe == KNIFEATTACK2 + 1)
					if ((plr.currweaponanim == 2 || plr.currweaponanim == 10) && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 3: // morning
				if (plr.currweaponframe == MORNINGATTACK2 + 3)
					if (plr.currweaponanim == 3 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			}

			if (plr.currweaponframe == RFIST + 5 || plr.currweaponframe == KNIFEATTACK + 6
					|| plr.currweaponframe == ZKNIFEATTACK + 5 // new
					|| plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == SWORDATTACK + 7
					|| plr.currweaponframe == BOWWALK + 5 || plr.currweaponframe == ZBOWATTACK + 4
					|| plr.currweaponframe == KNIFEATTACK2 + 2 || plr.currweaponframe == ZKNIFEATTACK2 + 2
					|| plr.currweaponframe == SWORDATTACK2 + 6 || plr.currweaponframe == MORNINGATTACK2 + 3
					|| plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == HALBERDATTACK2 + 3
					|| plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == BIGAXEATTACK2 + 6
					|| plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == PIKEATTACK2 + 4
					|| plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == EXCALATTACK2 + 5
					|| plr.currweaponframe == GOBSWORDATTACK2 + 4 || plr.currweaponframe == GOBSWORDATTACK + 4
					|| plr.currweaponframe == ZSHORTATTACK + 7 || plr.currweaponframe == ZSHORTATTACK2 + 4
					|| plr.currweaponframe == ZSTARATTACK + 7 || plr.currweaponframe == ZSTARATTACK2 + 3
					|| plr.currweaponframe == ZAXEATTACK + 12 || plr.currweaponframe == ZAXEATTACK2 + 6
					|| plr.currweaponframe == ZPIKEATTACK + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4
					|| plr.currweaponframe == ZTWOHANDATTACK + 12 || plr.currweaponframe == ZTWOHANDATTACK2 + 5
					|| plr.currweaponframe == ZHALBERDATTACK + 4 || plr.currweaponframe == ZHALBERDATTACK2 + 3)

				swingdaweapon(plr);

			plr.currweapontics -= TICSPERFRAME;
			if (plr.helmettime > 0)
				plr.currweapontics--;

			if (plr.currweapontics < 0) {
				plr.currweaponanim++;

				if (plr.currweaponanim > 11) {
					plr.currweaponanim = 0;
					plr.currweaponfired = 0;
					plr.currweaponflip = 0;
					plr.currweapon = plr.selectedgun;
					if (dahand > 0)
						dahand = 0;
				}

				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweapontics = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					} else {
						plr.currweapontics = zlefthandanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = zlefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;

					}
				} else {
					plr.currweapontics = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
					plr.currweaponframe = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
				}
			} else {
				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweaponframe = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					} else {
						plr.currweaponframe = zlefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				} else
					plr.currweaponframe = lefthandanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
			}

			if (plr.currweapon == 0 && plr.currweaponframe == 0) {
				dahand = 0;
				plr.currweaponanim = 0;
				plr.currweaponfired = 0;
			}

			if (plr.selectedgun == 4 && plr.currweaponframe == 0) {
				plr.currweaponanim = 0;
				plr.currweaponfired = 0;
				plr.currweaponflip = 0;
				plr.currweapon = plr.selectedgun;
			}
			break;
		case 1: // fire
			switch (plr.currweapon) {
			case 0: // fist
				if (plr.currweaponframe == RFIST + 5)
					if (plr.currweaponanim == 5 && plr.currweapontics == 10)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 1: // knife
				if (plr.currweaponframe == KNIFEATTACK + 6 || plr.currweaponframe == ZKNIFEATTACK + 5)
					if (plr.currweaponanim == 8 && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == KNIFEATTACK2 + 2 || plr.currweaponframe == ZKNIFEATTACK2 + 2)
					if ((plr.currweaponanim == 5 || plr.currweaponanim == 9) && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 2: // shortsword
				if (plr.currweaponframe == GOBSWORDATTACK + 4 || plr.currweaponframe == ZSHORTATTACK + 7)
					if (plr.currweaponanim == 4 && plr.currweapontics == 10)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == GOBSWORDATTACK2 + 4 || plr.currweaponframe == ZSHORTATTACK2 + 4)
					if (plr.currweaponanim == 4 && plr.currweapontics == 10)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 3: // morning
				if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
					if (plr.currweaponanim == 7 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == MORNINGATTACK2 + 3 || plr.currweaponframe == ZSTARATTACK2 + 3)
					if (plr.currweaponanim == 3 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 4: // sword
				if (plr.currweaponframe == SWORDATTACK + 7)
					if (plr.currweaponanim == 7 && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == SWORDATTACK2 + 6)
					if (plr.currweaponanim == 6 && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 5: // battleaxe
				if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
					if (plr.currweaponanim == 7 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
					if (plr.currweaponanim == 6 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 6: // bow
				if (plr.currweaponframe == BOWWALK + 4)
					if (plr.currweaponanim == 4 && plr.currweapontics == 6)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == ZBOWATTACK + 4)
					if (plr.currweaponanim == 4 && plr.currweapontics == 6)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 7: // pike
				if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
					if (plr.currweaponanim == 8 && plr.currweapontics == 10)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
					if (plr.currweaponanim == 4 && plr.currweapontics == 10)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 8: // two handed sword
				if (plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == ZTWOHANDATTACK + 12)
					if (plr.currweaponanim == 7 && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == EXCALATTACK2 + 5 || plr.currweaponframe == ZTWOHANDATTACK2 + 5)
					if (plr.currweaponanim == 5 && plr.currweapontics == 8)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			case 9: // halberd
				if (plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == ZHALBERDATTACK + 4)
					if (plr.currweaponanim == 7 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				if (plr.currweaponframe == HALBERDATTACK2 + 3 || plr.currweaponframe == ZHALBERDATTACK2 + 3)
					if (plr.currweaponanim == 4 && plr.currweapontics == 12)
						swingdasound(plr.currweapon, plr.weapon[plr.currweapon] == 3);
				break;
			}

			if (plr.currweaponframe == RFIST + 5 || plr.currweaponframe == KNIFEATTACK + 6
					|| plr.currweaponframe == ZKNIFEATTACK + 5 // new
					|| plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == SWORDATTACK + 7
					|| plr.currweaponframe == BOWWALK + 5 || plr.currweaponframe == ZBOWATTACK + 4
					|| plr.currweaponframe == KNIFEATTACK2 + 2 || plr.currweaponframe == ZKNIFEATTACK2 + 2
					|| plr.currweaponframe == SWORDATTACK2 + 6 || plr.currweaponframe == MORNINGATTACK2 + 3
					|| plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == HALBERDATTACK2 + 3
					|| plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == BIGAXEATTACK2 + 6
					|| plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == PIKEATTACK2 + 4
					|| plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == EXCALATTACK2 + 5
					|| plr.currweaponframe == GOBSWORDATTACK2 + 4 || plr.currweaponframe == GOBSWORDATTACK + 4
					|| plr.currweaponframe == ZSHORTATTACK + 7 || plr.currweaponframe == ZSHORTATTACK2 + 4
					|| plr.currweaponframe == ZSTARATTACK + 7 || plr.currweaponframe == ZSTARATTACK2 + 3
					|| plr.currweaponframe == ZAXEATTACK + 12 || plr.currweaponframe == ZAXEATTACK2 + 6
					|| plr.currweaponframe == ZPIKEATTACK + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4
					|| plr.currweaponframe == ZTWOHANDATTACK + 12 || plr.currweaponframe == ZTWOHANDATTACK2 + 5
					|| plr.currweaponframe == ZHALBERDATTACK + 4 || plr.currweaponframe == ZHALBERDATTACK2 + 3)

				swingdaweapon(plr);

			plr.currweapontics -= TICSPERFRAME;
			if (plr.helmettime > 0)
				plr.currweapontics--;

			if (plr.shieldpoints <= 0)
				droptheshield = true;

			if ((plr.currweaponframe == SWORDATTACK + 7 || plr.currweaponframe == SWORDATTACK2 + 7)
					&& plr.currweapontics < 0 && droptheshield) {
				if (engine.rand() % 100 > 50) {

					if (game.WH2) {
						if (plr.ammo[1] > 0 && plr.weapon[3] == 0) {
							plr.currweapon = 1;
							plr.currweapontics = 6;
							plr.currweaponanim = 0;
							plr.currweaponfired = 6;
							plr.hasshot = 0;
							plr.currweaponflip = 1;
						}
						if (plr.ammo[3] > 0) {
							plr.currweapon = 3;
							plr.currweapontics = 6;
							plr.currweaponanim = 0;
							plr.currweaponfired = 6;
							plr.hasshot = 0;
							plr.currweaponflip = 1;
						}
					} else {
						if (plr.lvl >= 4 && plr.lvl <= 4 && plr.ammo[1] > 0) {
							plr.currweapon = 1;
							plr.currweapontics = 6;
							plr.currweaponanim = 0;
							plr.currweaponfired = 6;
							plr.hasshot = 0;
							plr.currweaponflip = 1;
						} else if (plr.lvl >= 5 && plr.ammo[3] > 0) {
							plr.currweapon = 3;
							plr.currweapontics = 6;
							plr.currweaponanim = 0;
							plr.currweaponfired = 6;
							plr.hasshot = 0;
							plr.currweaponflip = 1;
						}
					}
				}
			}
			if (plr.currweapontics < 0) {
				plr.currweaponanim++;
				if (plr.currweaponanim > 11) {
					plr.currweaponanim = 0;
					plr.currweaponfired = 0;
					if (dahand > 0)
						dahand = 0;
				}
				if (plr.currweaponattackstyle == 0) {
					if (game.WH2) {
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweapontics = weaponanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
							plr.currweaponframe = weaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
						} else {
							plr.currweapontics = zweaponanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
							plr.currweaponframe = zweaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
						}
					} else {
						plr.currweapontics = weaponanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = weaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				} else {
					if (game.WH2) {
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweapontics = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweapontics;
							plr.currweaponframe = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
						} else {
							plr.currweapontics = zweaponanimtics2[plr.currweapon][plr.currweaponanim].daweapontics;
							plr.currweaponframe = zweaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
						}
					} else {
						plr.currweapontics = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				}
			} else {
				if (game.WH2) {
					if (plr.currweaponattackstyle == 0) {
						// flip
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweaponframe = weaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
						} else {
							plr.currweaponframe = zweaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
						}
					} else {
						// flip
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweaponframe = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
						} else {
							plr.currweaponframe = zweaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
						}
					}
				} else {
					if (plr.currweaponattackstyle == 0) {
						// flip
						plr.currweaponframe = weaponanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					} else {
						// flip
						plr.currweaponframe = weaponanimtics2[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				}
			}

			if (plr.currweapon == 0 && plr.currweaponframe == 0) {
				dahand = 0;
				plr.currweaponanim = 0;
				plr.currweaponfired = 0;
			}
			break;

		case 0: // walking
			if (game.WH2) {
				if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2)
					plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;
				else
					plr.currweapontics = zweaponanimtics[plr.currweapon][0].daweapontics;

				if (plr.currweapon == 6 && plr.ammo[6] <= 0) {
					// wango
					if (plr.weapon[plr.currweapon] == 1)
						plr.currweaponframe = BOWREADYEND;
					else
						plr.currweaponframe = ZBOWWALK;
				} else {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2)
						plr.currweaponframe = weaponanimtics[plr.currweapon][0].daweaponframe;
					else
						plr.currweaponframe = zweaponanimtics[plr.currweapon][0].daweaponframe;
				}
			} else {
				plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;

				if (plr.currweapon == 6 && plr.ammo[6] <= 0)
					plr.currweaponframe = BOWREADYEND;
				else
					plr.currweaponframe = weaponanimtics[plr.currweapon][0].daweaponframe;
			}
			if ((plr.pInput.fvel|plr.pInput.svel) != 0) {
				snakex = (sintable[(lockclock << 4) & 2047] >> 12);
				snakey = (sintable[(totalclock << 4) & 2047] >> 12);
			}
			break;
		case 2: // unready
			if (plr.currweapon == 1)
				weapondrop += TICSPERFRAME << 1;
			else
				weapondrop += TICSPERFRAME;
			if (weapondrop > weapondropgoal) {
				plr.currweaponfired = 3;
//				weaponraise = 40;
				plr.currweapon = plr.selectedgun;
			}

			if (game.WH2) {
				if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2)
					plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;
				else
					plr.currweapontics = zweaponanimtics[plr.currweapon][0].daweapontics;

				if (plr.currweapon == 6 && plr.ammo[6] <= 0) {
					if (plr.weapon[plr.currweapon] == 1)
						plr.currweaponframe = BOWREADYEND;
					else
						// currweaponframe=ZBOWREADYEND;
						plr.currweaponframe = ZBOWWALK;
				} else {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2)
						plr.currweaponframe = weaponanimtics[plr.currweapon][0].daweaponframe;
					else
						plr.currweaponframe = zweaponanimtics[plr.currweapon][0].daweaponframe;
				}
			} else {
				plr.currweapontics = weaponanimtics[plr.currweapon][0].daweapontics;

				if (plr.currweapon == 6 && plr.ammo[6] <= 0)
					plr.currweaponframe = BOWREADYEND;
				else
					plr.currweaponframe = weaponanimtics[plr.currweapon][0].daweaponframe;
			}
			break;
		case 3: // ready
			plr.currweapontics -= TICSPERFRAME;
			if (plr.currweapontics < 0) {
				plr.currweaponanim++;
				if (plr.currweaponanim == 12) {
					plr.currweaponanim = 0;
					plr.currweaponfired = 0;

					if (game.WH2) {
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweaponframe = readyanimtics[plr.currweapon][11].daweaponframe;
						} else {
							plr.currweaponframe = zreadyanimtics[plr.currweapon][11].daweaponframe;
						}
					} else
						plr.currweaponframe = readyanimtics[plr.currweapon][11].daweaponframe;
					break;
				}
				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweapontics = readyanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = readyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					} else {
						plr.currweapontics = zreadyanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
						plr.currweaponframe = zreadyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				} else {
					plr.currweapontics = readyanimtics[plr.currweapon][plr.currweaponanim].daweapontics;
					plr.currweaponframe = readyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
				}
			} else {
				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweaponframe = readyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;

					} else {
						plr.currweaponframe = zreadyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
					}
				} else
					plr.currweaponframe = readyanimtics[plr.currweapon][plr.currweaponanim].daweaponframe;
			}
			break;
		case 5: // cock
			plr.currweapontics -= (TICSPERFRAME);
			if (plr.currweapontics < 0) {
				plr.currweaponanim++;
				if (plr.currweaponanim == 4) {
					plr.currweaponanim = 0;
					plr.currweaponfired = 0;
					if (game.WH2) {
						if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
							plr.currweaponframe = cockanimtics[3].daweaponframe;
						} else {
							if (plr.weapon[plr.currweapon] == 3) {
								plr.currweaponframe = zcockanimtics[4].daweaponframe;
							} else {
								plr.currweaponframe = cockanimtics[4].daweaponframe;

							}
						}

					} else
						plr.currweaponframe = cockanimtics[3].daweaponframe;
					break;
				}

				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweapontics = cockanimtics[plr.currweaponanim].daweapontics;
						plr.currweaponframe = cockanimtics[plr.currweaponanim].daweaponframe;
					} else {
						if (plr.weapon[plr.currweapon] == 3) {
							plr.currweapontics = zcockanimtics[plr.currweaponanim].daweapontics;
							plr.currweaponframe = zcockanimtics[plr.currweaponanim].daweaponframe;

						} else {
							plr.currweapontics = cockanimtics[plr.currweaponanim].daweapontics;
							plr.currweaponframe = cockanimtics[plr.currweaponanim].daweaponframe;
						}
					}
				} else {
					plr.currweapontics = cockanimtics[plr.currweaponanim].daweapontics;
					plr.currweaponframe = cockanimtics[plr.currweaponanim].daweaponframe;
				}
			} else {
				if (game.WH2) {
					if (plr.weapon[plr.currweapon] == 1 || plr.weapon[7] == 2) {
						plr.currweaponframe = cockanimtics[plr.currweaponanim].daweaponframe;
					} else {
						if (plr.weapon[plr.currweapon] == 3) {
							plr.currweaponframe = zcockanimtics[plr.currweaponanim].daweaponframe;
						} else {
							plr.currweaponframe = zcockanimtics[plr.currweaponanim].daweaponframe;
						}
					}
				} else
					plr.currweaponframe = cockanimtics[plr.currweaponanim].daweaponframe;
			}
			break;
		case 4: // throw the orb

			if (plr.currweaponframe == 0)
				castaorb(plr);

			plr.currweapontics -= (TICSPERFRAME);
			if (plr.currweapontics < 0) {
				plr.currweaponanim++;
				if (plr.currweaponanim > 12) {
					plr.currweaponanim = 0;
					plr.currweaponfired = 0;
					plr.orbshot = 0;

					if (game.WH2) {
						plr.currweaponframe = wh2throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
					} else
						plr.currweaponframe = throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
					break;
				}

				if (game.WH2) {
					plr.currweapontics = wh2throwanimtics[plr.currentorb][plr.currweaponanim].daweapontics;
					plr.currweaponframe = wh2throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
				} else {
					plr.currweapontics = throwanimtics[plr.currentorb][plr.currweaponanim].daweapontics;
					plr.currweaponframe = throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
				}

			} else {
				if (game.WH2) {
					plr.currweaponframe = wh2throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
				} else
					plr.currweaponframe = throwanimtics[plr.currentorb][plr.currweaponanim].daweaponframe;
			}
			break;
		}

		if(plr.currweaponfired != 4 && plr.orbammo[plr.currentorb] <= 0)
			spellswitch(plr, 1);

		if (plr.shieldpoints > 0 && (plr.currweaponfired == 0 || plr.currweaponfired == 1) && plr.selectedgun > 0
				&& plr.selectedgun < 5 && !droptheshield) {
			if (plr.currweaponfired == 1) {
				snakex = (sintable[(lockclock << 4) & 2047] >> 12);
				snakey = (sintable[(totalclock << 4) & 2047] >> 12);
				if (droptheshield) {
					dropshieldcnt += (TICSPERFRAME << 1);
					snakey += dropshieldcnt;
				}
			}

			if (dropshieldcnt > 200) {
				dropshieldcnt = 0;
				droptheshield = true;
			}
		}
	}

	public static void madenoise(PLAYER plr, int val, int x, int y, int z) {
		short nextsprite;
		for (short i = headspritestat[FACE]; i >= 0; i = nextsprite) {
			nextsprite = nextspritestat[i];
			if ((klabs(x - sprite[i].x) + klabs(y - sprite[i].y) < (val * 4096)))
				newstatus(i, FINDME);
		}
	}

	public static void shootgun(PLAYER plr, float ang, int guntype) {
		int k = 0, daz2;
		short j, i;

		int daang = (int) ang;

		if(plr.hasshot == 1)
			return;

		switch (guntype) {
		case 0:
			daz2 = (int) (100 - plr.horiz) * 2000;

			engine.hitscan(plr.x, plr.y, plr.z, plr.sector, // Start position
					sintable[(daang + 2560) & 2047], // X vector of 3D ang
					sintable[(daang + 2048) & 2047], // Y vector of 3D ang
					daz2, // Z vector of 3D ang
					pHitInfo, CLIPMASK1);

			if (pHitInfo.hitsprite >= 0)
				madeahit = true;

			if (pHitInfo.hitwall >= 0) {
				if ((klabs(plr.x - pHitInfo.hitx) + klabs(plr.y - pHitInfo.hity) < 512)
						&& (klabs((plr.z >> 8) - ((pHitInfo.hitz >> 8) - (64))) <= (512 >> 3))) {
					madeahit = true;
					switch (plr.currweapon) {
					case 0: // fist
						if (plr.currweaponframe == RFIST + 5)
							if (plr.currweaponanim == 5 && plr.currweapontics == 10)
								swingdapunch(plr, plr.currweapon);
						break;
					case 1: // knife
						if (plr.currweaponframe == KNIFEATTACK + 6)
							if (plr.currweaponanim == 8 && plr.currweapontics == 8)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == KNIFEATTACK2 + 2)
							if (plr.currweaponanim == 5 || plr.currweaponanim == 9 && plr.currweapontics == 8)
								swingdapunch(plr, plr.currweapon);
						break;
					case 2: // short sword
						if (plr.currweaponframe == GOBSWORDATTACK + 4 || plr.currweaponframe == ZSHORTATTACK + 7)
							if (plr.currweaponanim == 4 && plr.currweapontics == 10)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == GOBSWORDATTACK + 4 || plr.currweaponframe == ZSHORTATTACK + 4)
							if (plr.currweaponanim == 4 && plr.currweapontics == 10)
								swingdapunch(plr, plr.currweapon);
						break;
					case 3: // morning
						if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
							if (plr.currweaponanim == 7 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == MORNINGATTACK2 + 3 || plr.currweaponframe == ZSTARATTACK + 3)
							if (plr.currweaponanim == 3 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						break;
					case 4: // sword
						if (plr.currweaponframe == SWORDATTACK + 7)
							if (plr.currweaponanim == 7 && plr.currweapontics == 8) {
								swingdapunch(plr, plr.currweapon);
								madenoise(plr, 2, plr.x, plr.y, plr.z);
							}
						if (plr.currweaponframe == SWORDATTACK2 + 6)
							if (plr.currweaponanim == 6 && plr.currweapontics == 8) {
								swingdapunch(plr, plr.currweapon);
								madenoise(plr, 2, plr.x, plr.y, plr.z);
							}
						break;
					case 5: // battleaxe
						if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
							if (plr.currweaponanim == 7 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
							if (plr.currweaponanim == 6 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						break;
					case 6: // bow
						if (plr.currweaponframe == BOWWALK + 4)
							if (plr.currweaponanim == 4 && plr.currweapontics == 6)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == ZBOWATTACK + 4)
							if (plr.currweaponanim == 4 && plr.currweapontics == 6)
								swingdapunch(plr, plr.currweapon);
						break;
					case 7: // pike
						if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
							if (plr.currweaponanim == 8 && plr.currweapontics == 10)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
							if (plr.currweaponanim == 4 && plr.currweapontics == 10)
								swingdapunch(plr, plr.currweapon);
						break;
					case 8: // two handed sword
						if (plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == ZTWOHANDATTACK + 12)
							if (plr.currweaponanim == 7 && plr.currweapontics == 8)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == EXCALATTACK2 + 5 || plr.currweaponframe == ZTWOHANDATTACK2 + 5)
							if (plr.currweaponanim == 5 && plr.currweapontics == 8)
								swingdapunch(plr, plr.currweapon);
						break;
					case 9: // halberd
						if (plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == ZHALBERDATTACK + 4)
							if (plr.currweaponanim == 6 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						if (plr.currweaponframe == HALBERDATTACK2 + 3 || plr.currweaponframe == ZHALBERDATTACK2 + 3)
							if (plr.currweaponanim == 4 && plr.currweapontics == 12)
								swingdapunch(plr, plr.currweapon);
						break;
					}
				}
			}

			if (checkweapondist(pHitInfo.hitsprite, plr.x, plr.y, plr.z, plr.selectedgun)) {
				madeahit = true;

				switch (sprite[pHitInfo.hitsprite].detail) {

				case DEMONTYPE:
				case GONZOTYPE:
				case KATIETYPE:
				case KURTTYPE:
				case NEWGUYTYPE:
				case GRONTYPE:
				case KOBOLDTYPE:
				case DRAGONTYPE:
				case DEVILTYPE:
				case FREDTYPE:
				case SKELETONTYPE:
				case GOBLINTYPE:
				case IMPTYPE:
				case MINOTAURTYPE:
				case SPIDERTYPE:
				case SKULLYTYPE:
				case FATWITCHTYPE:
				case FISHTYPE:
				case RATTYPE:
				case WILLOWTYPE:
				case GUARDIANTYPE:
				case JUDYTYPE:
					if (netgame) {
						// XXX netshootgun(pHitInfo.hitsprite,currweapon);
					}

					if(sprite[pHitInfo.hitsprite].statnum == DIE || sprite[pHitInfo.hitsprite].statnum == DEAD) //already dying
						break;

					if (game.WH2 && plr.currweapon == 3)
						if (plr.weapon[plr.currweapon] == 3) {
							explosion(pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz, 4096);
						}

					if (plr.invisibletime > 0) {
						if (game.WH2) {
							if ((engine.krand() & 32) > 15)
								plr.invisibletime = -1;
						} else {
							if ((engine.krand() & 1) != 0)
								plr.invisibletime = -1;
						}
					}

					switch (plr.selectedgun) {
					case 0: // fist
						if (game.WH2) {
							k = (engine.krand() % 5) + 1;
							break;
						}
						k = (engine.krand() & 5) + 1;
						break;
					case 1: // dagger
						if (game.WH2) {
							k = (engine.krand() % 5) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 5) + 10;
						else
							k = (engine.krand() & 3) + 5;

						break;
					case 2: // short sword
						if (game.WH2) {
							k = (engine.krand() % 10) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 10) + 10;
						else
							k = (engine.krand() & 6) + 10;
						break;
					case 3: // morning star
						if (game.WH2) {
							k = (engine.krand() % 15) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 8) + 10;
						else
							k = (engine.krand() & 8) + 15;
						break;
					case 4: // broad sword
						if (game.WH2) {
							k = (engine.krand() % 20) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 5) + 20;
						else
							k = (engine.krand() & 5) + 15;
						break;
					case 5: // battle axe
						if (game.WH2) {
							k = (engine.krand() % 25) + 5;
							switch (sprite[pHitInfo.hitsprite].detail) {
							case GRONTYPE:
							case NEWGUYTYPE:
							case KURTTYPE:
							case GONZOTYPE:
								k += k >> 1;
								break;
							}
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 5) + 25;
						else
							k = (engine.krand() & 5) + 20;
						break;
					case 6: // bow
						if (game.WH2) {
							k = (engine.krand() % 30) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 15) + 5;
						else
							k = (engine.krand() & 15) + 5;
						break;
					case 7: // pike axe
						if (game.WH2) {
							k = (engine.krand() % 35) + 5;
							break;
						}
						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 15) + 10;
						else
							k = (engine.krand() & 15) + 5;
						break;
					case 8: // two handed sword
						if (game.WH2) {
							k = (engine.krand() % 40) + 5;
							break;
						}
						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 15) + 45;
						else
							k = (engine.krand() & 15) + 40;
						break;
					case 9: // halberd
						if (game.WH2) {
							k = (engine.krand() % 45) + 5;
							break;
						}

						if (plr.currweaponattackstyle == 0)
							k = (engine.krand() & 15) + 25;
						else
							k = (engine.krand() & 15) + 15;
						break;

					}

					k += plr.lvl;
					if (game.WH2 && plr.weapon[plr.currweapon] == 3) {
						k <<= 1;
					}

					if (plr.vampiretime > 0) {
						if (plr.health <= plr.maxhealth)
							addhealth(plr, (engine.krand() % 10) + 1);
					}
					if (plr.helmettime > 0)
						k <<= 1;
					if (plr.strongtime > 0) {
						k += k >> 1;

						switch (plr.currweapon) {
						case 0: // fist
							if (plr.currweaponframe == RFIST + 5)
								if (plr.currweaponanim == 5 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 1: // knife
							if (plr.currweaponframe == KNIFEATTACK + 6)
								if (plr.currweaponanim == 8 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == KNIFEATTACK2 + 2)
								if (plr.currweaponanim == 5 || plr.currweaponanim == 9 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 2: // short sword
							if (plr.currweaponframe == GOBSWORDATTACK + 4 || plr.currweaponframe == ZSHORTATTACK + 7)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == GOBSWORDATTACK2 + 4 || plr.currweaponframe == ZSHORTATTACK2 + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 3: // morning
							if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
								if (plr.currweaponanim == 7 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == MORNINGATTACK2 + 3 || plr.currweaponframe == ZSTARATTACK2 + 3)
								if (plr.currweaponanim == 3 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 4: // sword
							if (plr.currweaponframe == SWORDATTACK + 7)
								if (plr.currweaponanim == 7 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == SWORDATTACK2 + 6)
								if (plr.currweaponanim == 6 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 5: // battleaxe
							if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
								if (plr.currweaponanim == 7 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
								if (plr.currweaponanim == 6 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 6: // bow
							if (plr.currweaponframe == BOWWALK + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 6)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == ZBOWATTACK + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 6)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 7: // pike
							if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
								if (plr.currweaponanim == 8 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 8: // two handed sword
							if (plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == ZTWOHANDATTACK + 12)
								if (plr.currweaponanim == 7 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == EXCALATTACK2 + 5 || plr.currweaponframe == ZTWOHANDATTACK2 + 5)
								if (plr.currweaponanim == 5 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 9: // halberd
							if (plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == ZHALBERDATTACK + 4)
								if (plr.currweaponanim == 6 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == HALBERDATTACK2 + 3 || plr.currweaponframe == ZHALBERDATTACK2 + 3)
								if (plr.currweaponanim == 4 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						}
						sprite[pHitInfo.hitsprite].hitag -= (k << 1);
						if (game.WH2 && plr.weapon[plr.currweapon] == 3 && plr.currweapon == 8
								&& sprite[pHitInfo.hitsprite].pal != 6) {
							if (sprite[pHitInfo.hitsprite].hitag <= 0) {
								sprite[pHitInfo.hitsprite].hitag = 1;
							}
							if (engine.krand() % 100 > 50)
								medusa(plr, pHitInfo.hitsprite);
							break;
						}

						else if (plr.currweapon != 0) {

							// JSA GORE1 you have strong time
							if (engine.krand() % 100 > 50) {
								if (sprite[pHitInfo.hitsprite].picnum == SKELETON
										|| sprite[pHitInfo.hitsprite].picnum == SKELETONATTACK
										|| sprite[pHitInfo.hitsprite].picnum == SKELETONDIE)
									playsound_loc(S_SKELHIT1 + (engine.krand() % 2), sprite[pHitInfo.hitsprite].x,
											sprite[pHitInfo.hitsprite].y);
							}

							// HERE
							switch (plr.currweapon) {
							case 0: // fist
								break;
							case 1: // knife
								if (plr.currweaponframe == KNIFEATTACK + 6)
									if (plr.currweaponanim == 8 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == KNIFEATTACK2 + 2)
									if (plr.currweaponanim == 5 || plr.currweaponanim == 9 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 2: // short sword
								if (plr.currweaponframe == GOBSWORDATTACK + 4
										|| plr.currweaponframe == ZSHORTATTACK + 7)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == GOBSWORDATTACK2 + 4
										|| plr.currweaponframe == ZSHORTATTACK + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 3: // morning
								if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
									if (plr.currweaponanim == 7 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == MORNINGATTACK2 + 3
										|| plr.currweaponframe == ZSTARATTACK2 + 3)
									if (plr.currweaponanim == 3 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 4: // sword
								if (plr.currweaponframe == SWORDATTACK + 7)
									if (plr.currweaponanim == 7 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == SWORDATTACK2 + 6)
									if (plr.currweaponanim == 6 && plr.currweapontics == 8)
										break;
								chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
										pHitInfo.hitsect, daang);
							case 5: // battleaxe
								if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
									if (plr.currweaponanim == 7 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
									if (plr.currweaponanim == 6 && plr.currweapontics == 12)
										break;
								chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
										pHitInfo.hitsect, daang);
							case 6: // bow
								if (plr.currweaponframe == BOWWALK + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 6)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == ZBOWATTACK + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 6)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 7: // pike
								if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
									if (plr.currweaponanim == 8 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										break;
								chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
										pHitInfo.hitsect, daang);
							case 8: // two handed sword
								if (plr.currweaponframe == EXCALATTACK1 + 7
										|| plr.currweaponframe == ZTWOHANDATTACK + 12)
									if (plr.currweaponanim == 7 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == EXCALATTACK2 + 5
										|| plr.currweaponframe == ZTWOHANDATTACK2 + 5)
									if (plr.currweaponanim == 5 && plr.currweapontics == 8)
										break;
								chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
										pHitInfo.hitsect, daang);
							case 9: // halberd
								if (plr.currweaponframe == HALBERDATTACK1 + 3
										|| plr.currweaponframe == ZHALBERDATTACK + 4)
									if (plr.currweaponanim == 6 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == HALBERDATTACK2 + 3
										|| plr.currweaponframe == ZHALBERDATTACK2 + 3)
									if (plr.currweaponanim == 4 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							}
						}

					} else {
						switch (plr.currweapon) {
						case 0: // fist
							if (plr.currweaponframe == RFIST + 5)
								if (plr.currweaponanim == 5 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 1: // knife
							if (plr.currweaponframe == KNIFEATTACK + 6)
								if (plr.currweaponanim == 8 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == KNIFEATTACK2 + 2)
								if (plr.currweaponanim == 5 || plr.currweaponanim == 9 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 2: // SHORT SWORD
							if (plr.currweaponframe == GOBSWORDATTACK + 4 || plr.currweaponframe == ZSHORTATTACK + 7)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == GOBSWORDATTACK2 + 4 || plr.currweaponframe == ZSHORTATTACK2 + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 3: // morning
							if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
								if (plr.currweaponanim == 7 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == MORNINGATTACK2 + 3 || plr.currweaponframe == ZSTARATTACK2 + 3)
								if (plr.currweaponanim == 3 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 4: // sword
							if (plr.currweaponframe == SWORDATTACK + 7)
								if (plr.currweaponanim == 7 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == SWORDATTACK2 + 6)
								if (plr.currweaponanim == 6 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 5: // battleaxe
							if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
								if (plr.currweaponanim == 7 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
								if (plr.currweaponanim == 6 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 6: // bow
							if (plr.currweaponframe == BOWWALK + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 6)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == ZBOWATTACK + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 6)
									swingdacrunch(plr, plr.currweapon);
							break;

						case 7: // pike
							if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
								if (plr.currweaponanim == 8 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
								if (plr.currweaponanim == 4 && plr.currweapontics == 10)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 8: // two handed sword
							if (plr.currweaponframe == EXCALATTACK1 + 7 || plr.currweaponframe == ZTWOHANDATTACK + 12)
								if (plr.currweaponanim == 7 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == EXCALATTACK2 + 5 || plr.currweaponframe == ZTWOHANDATTACK2 + 5)
								if (plr.currweaponanim == 5 && plr.currweapontics == 8)
									swingdacrunch(plr, plr.currweapon);
							break;
						case 9: // halberd
							if (plr.currweaponframe == HALBERDATTACK1 + 3 || plr.currweaponframe == ZHALBERDATTACK + 4)
								if (plr.currweaponanim == 6 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							if (plr.currweaponframe == HALBERDATTACK2 + 3 || plr.currweaponframe == ZHALBERDATTACK2 + 3)
								if (plr.currweaponanim == 4 && plr.currweapontics == 12)
									swingdacrunch(plr, plr.currweapon);
							break;
						}
						sprite[pHitInfo.hitsprite].hitag -= k;

						if (game.WH2 && plr.weapon[plr.currweapon] == 3 && plr.currweapon == 8
								&& sprite[pHitInfo.hitsprite].pal != 6) {
							if (sprite[pHitInfo.hitsprite].hitag <= 0) {
								sprite[pHitInfo.hitsprite].hitag = 1;
							}
							if (engine.krand() % 100 > 75)
								medusa(plr, pHitInfo.hitsprite);
							break;
						}

						if (plr.currweapon != 0) {
							// JSA GORE normal
							if (engine.krand() % 100 > 50) {
								if (sprite[pHitInfo.hitsprite].picnum == SKELETON
										|| sprite[pHitInfo.hitsprite].picnum == SKELETONATTACK
										|| sprite[pHitInfo.hitsprite].picnum == SKELETONDIE)
									playsound_loc(S_SKELHIT1 + (engine.krand() % 2), sprite[pHitInfo.hitsprite].x,
											sprite[pHitInfo.hitsprite].y);
							}
							// HERE
							switch (plr.currweapon) {
							case 0: // fist
								break;
							case 1: // knife
								if (plr.currweaponframe == KNIFEATTACK + 6)
									if (plr.currweaponanim == 8 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == KNIFEATTACK2 + 2)
									if (plr.currweaponanim == 5 || plr.currweaponanim == 9 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 2: // short sword
								if (plr.currweaponframe == GOBSWORDATTACK + 4
										|| plr.currweaponframe == ZSHORTATTACK + 7)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == GOBSWORDATTACK2 + 4
										|| plr.currweaponframe == ZSHORTATTACK2 + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 3: // morning
								if (plr.currweaponframe == MORNINGSTAR + 5 || plr.currweaponframe == ZSTARATTACK + 7)
									if (plr.currweaponanim == 7 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == MORNINGATTACK2 + 3
										|| plr.currweaponframe == ZSTARATTACK2 + 3)
									if (plr.currweaponanim == 3 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 4: // sword
								if (plr.currweaponframe == SWORDATTACK + 7)
									if (plr.currweaponanim == 7 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == SWORDATTACK2 + 6)
									if (plr.currweaponanim == 6 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 5: // battleaxe
								if (plr.currweaponframe == BIGAXEATTACK + 7 || plr.currweaponframe == ZAXEATTACK + 12)
									if (plr.currweaponanim == 7 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == BIGAXEATTACK2 + 6 || plr.currweaponframe == ZAXEATTACK2 + 6)
									if (plr.currweaponanim == 6 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 6: // bow
								if (plr.currweaponframe == BOWWALK + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 6)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == ZBOWATTACK + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 6)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 7: // pike
								if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4)
									if (plr.currweaponanim == 8 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == PIKEATTACK2 + 4 || plr.currweaponframe == ZPIKEATTACK2 + 4)
									if (plr.currweaponanim == 4 && plr.currweapontics == 10)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 8: // two handed sword
								if (plr.currweaponframe == EXCALATTACK1 + 7
										|| plr.currweaponframe == ZTWOHANDATTACK + 12)
									if (plr.currweaponanim == 7 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == EXCALATTACK2 + 5
										|| plr.currweaponframe == ZTWOHANDATTACK2 + 5)
									if (plr.currweaponanim == 5 && plr.currweapontics == 8)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							case 9: // halberd
								if (plr.currweaponframe == HALBERDATTACK1 + 3
										|| plr.currweaponframe == ZHALBERDATTACK + 4)
									if (plr.currweaponanim == 6 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								if (plr.currweaponframe == HALBERDATTACK2 + 3
										|| plr.currweaponframe == ZHALBERDATTACK2 + 3)
									if (plr.currweaponanim == 4 && plr.currweapontics == 12)
										chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity,
												pHitInfo.hitz, pHitInfo.hitsect, daang);
								break;
							}
						}
					}

					if (netgame) {
						break;
					}

					if (sprite[pHitInfo.hitsprite].hitag <= 0) {
						if (plr.selectedgun > 1) {
							// JSA GORE on death ?
							// RAF ans:death
							chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
									pHitInfo.hitsect, daang);
							if (sprite[pHitInfo.hitsprite].picnum == SKELETON
									|| sprite[pHitInfo.hitsprite].picnum == SKELETONATTACK
									|| sprite[pHitInfo.hitsprite].picnum == SKELETONDIE)
								playsound_loc(S_SKELHIT1 + (engine.krand() % 2), sprite[pHitInfo.hitsprite].x,
										sprite[pHitInfo.hitsprite].y);
						}
						newstatus(pHitInfo.hitsprite, DIE);
					}
					sprite[pHitInfo.hitsprite].ang = (short) (plr.ang + ((engine.krand() & 32) - 64));
					if (sprite[pHitInfo.hitsprite].hitag > 0)
						newstatus(pHitInfo.hitsprite, PAIN);
					break;
				} // switch enemytype

				switch (sprite[pHitInfo.hitsprite].detail) {
				case GRONTYPE:
				case KOBOLDTYPE:
				case DRAGONTYPE:
				case DEVILTYPE:
				case FREDTYPE:
				case SKELETONTYPE:
				case GOBLINTYPE:
				case IMPTYPE:
				case MINOTAURTYPE:
				case SKULLYTYPE:
				case SPIDERTYPE:
				case FATWITCHTYPE:
				case JUDYTYPE:
				case NEWGUYTYPE:
				case GONZOTYPE:
				case KURTTYPE:
					if (sprite[pHitInfo.hitsprite].pal == 6) {
						// JSA_NEW
						SND_Sound(S_SOCK1 + (engine.krand() % 4));
						playsound_loc(S_FREEZEDIE, pHitInfo.hitx, pHitInfo.hity);
						for (k = 0; k < 32; k++)
							icecubes(pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
									pHitInfo.hitsprite);
						addscore(plr, 100);
						engine.deletesprite(pHitInfo.hitsprite);
					}
					break;
				} // switch frozen

				switch (sprite[pHitInfo.hitsprite].picnum) {
				case STAINGLASS1:
				case STAINGLASS2:
				case STAINGLASS3:
				case STAINGLASS4:
				case STAINGLASS5:
				case STAINGLASS6:
				case STAINGLASS7:
				case STAINGLASS8:
				case STAINGLASS9:
					if (!game.WH2)
						break;
				case BARREL:
				case VASEA:
				case VASEB:
				case VASEC:

					newstatus(pHitInfo.hitsprite, BROKENVASE);
					break;
				} // switch
			} // if weapondist

			if (!madeahit) {
				plr.ammo[plr.currweapon]++;
				madeahit = true;
			}
			break;
		case 1: //bow's arrow
			daz2 = (int) (100 - plr.horiz) * 2000;

			engine.hitscan(plr.x, plr.y, plr.z, plr.sector, // Start position
					sintable[(daang + 2560) & 2047], // X vector of 3D ang
					sintable[(daang + 2048) & 2047], // Y vector of 3D ang
					daz2, // Z vector of 3D ang
					pHitInfo, CLIPMASK1);

			if (pHitInfo.hitwall > 0 && pHitInfo.hitsprite < 0) { // XXX WH2 sector lotag < 6 || > 8
				if (game.WH2) {
					arrowcnt = (arrowcnt + 1) % ARROWCOUNTLIMIT;
					if (arrowsprite[arrowcnt] != -1) {
						engine.deletesprite(arrowsprite[arrowcnt]);
						arrowsprite[arrowcnt] = -1;
					}
				}

				engine.neartag(pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz, pHitInfo.hitsect, (short) daang,
						neartag, 1024, 3);

				if (neartag.tagsector < 0) {
					j = engine.insertsprite(pHitInfo.hitsect, (short) 0);
					sprite[j].x = pHitInfo.hitx;
					sprite[j].y = pHitInfo.hity;
					sprite[j].z = pHitInfo.hitz + (8 << 8);
					sprite[j].cstat = 17;// was16
					sprite[j].picnum = WALLARROW;
					sprite[j].shade = 0;
					sprite[j].pal = 0;
					sprite[j].xrepeat = 16;
					sprite[j].yrepeat = 48;
					sprite[j].ang = (short) (((daang) - 512 + (engine.krand() & 128 - 64)) & 2047);
					sprite[j].xvel = 0;
					sprite[j].yvel = 0;
					sprite[j].zvel = 0;
					sprite[j].owner = sprite[plr.spritenum].owner;
					sprite[j].lotag = 32;
					sprite[j].hitag = 0;
					playsound_loc(S_ARROWHIT, sprite[j].x, sprite[j].y);

					if (game.WH2 && plr.weapon[6] == 3 && plr.currweapon == 6) {
						j = engine.insertsprite(pHitInfo.hitsect, FIRECHUNK);
						sprite[j].x = pHitInfo.hitx;
						sprite[j].y = pHitInfo.hity;
						sprite[j].z = pHitInfo.hitz + (14 << 8);
						sprite[j].cstat = 0;
						sprite[j].picnum = ARROWFLAME;
						sprite[j].shade = 0;
						sprite[j].pal = 0;
						sprite[j].xrepeat = 64;
						sprite[j].yrepeat = 64;
						sprite[j].ang = 0;
						sprite[j].xvel = 0;
						sprite[j].yvel = 0;
						sprite[j].zvel = 0;
						sprite[j].owner = 0;
						sprite[j].lotag = 1200;
						sprite[j].hitag = 0;
					}
				}

				if (netgame) {
//					netshootgun(-1,5);
				}
			}
			if (pHitInfo.hitwall > 0 && pHitInfo.hitsprite > 0) {
				j = engine.insertsprite(pHitInfo.hitsect, FX);
				sprite[j].x = pHitInfo.hitx;
				sprite[j].y = pHitInfo.hity;
				sprite[j].z = pHitInfo.hitz + (8 << 8);
				sprite[j].cstat = 2;
				sprite[j].picnum = PLASMA;
				sprite[j].shade = -32;
				sprite[j].pal = 0;
				sprite[j].xrepeat = 32;
				sprite[j].yrepeat = 32;
				sprite[j].ang = (short) daang;
				sprite[j].xvel = 0;
				sprite[j].yvel = 0;
				sprite[j].zvel = 0;
				sprite[j].owner = sprite[plr.spritenum].owner;
				sprite[j].lotag = 32;
				sprite[j].hitag = 0;
				movesprite(j, ((sintable[(sprite[j].ang + 512) & 2047]) * TICSPERFRAME) << 3,
						((sintable[sprite[j].ang & 2047]) * TICSPERFRAME) << 3, 0, 4 << 8, 4 << 8, 0);
			}
			if ((pHitInfo.hitsprite >= 0) && (sprite[pHitInfo.hitsprite].statnum < MAXSTATUS)) {
				switch (sprite[pHitInfo.hitsprite].detail) {
				case KURTTYPE:
				case KATIETYPE:
				case NEWGUYTYPE:
				case GONZOTYPE:
				case GRONTYPE:
				case KOBOLDTYPE:
				case DRAGONTYPE:
				case DEMONTYPE:
				case DEVILTYPE:
				case FREDTYPE:
				case SKELETONTYPE:
				case GOBLINTYPE:
				case IMPTYPE:
				case MINOTAURTYPE:
				case SPIDERTYPE:
				case SKULLYTYPE:
				case FATWITCHTYPE:
				case FISHTYPE:
				case RATTYPE:
				case WILLOWTYPE:
				case GUARDIANTYPE:
				case JUDYTYPE:
					if (netgame) {
//						netshootgun(pHitInfo.hitsprite,currweapon);
						break;
					}
					if (game.WH2)
						sprite[pHitInfo.hitsprite].hitag -= (engine.krand() & 30) + 15;
					else
						sprite[pHitInfo.hitsprite].hitag -= (engine.krand() & 15) + 15;

					if (sprite[pHitInfo.hitsprite].hitag <= 0) {
						newstatus(pHitInfo.hitsprite, DIE);
						if (sprite[pHitInfo.hitsprite].picnum == RAT)
							chunksofmeat(plr, pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
									pHitInfo.hitsect, daang);
					} else {
						sprite[pHitInfo.hitsprite].ang = (short) (engine.getangle(plr.x - sprite[pHitInfo.hitsprite].x,
								plr.y - sprite[pHitInfo.hitsprite].y) & 2047);
						newstatus(pHitInfo.hitsprite, PAIN);
					}
					break;
				}

				switch (sprite[pHitInfo.hitsprite].detail) {
				// SHATTER FROZEN CRITTER
				case GRONTYPE:
				case KOBOLDTYPE:
				case DRAGONTYPE:
				case DEVILTYPE:
				case FREDTYPE:
				case SKELETONTYPE:
				case GOBLINTYPE:
				case IMPTYPE:
				case MINOTAURTYPE:
				case SKULLYTYPE:
				case SPIDERTYPE:
				case FATWITCHTYPE:
				case JUDYTYPE:
				case NEWGUYTYPE:
				case GONZOTYPE:
				case KURTTYPE:
					if (sprite[pHitInfo.hitsprite].pal == 6) {
						// JSA_NEW
						SND_Sound(S_SOCK1 + (engine.krand() % 4));
						playsound_loc(S_FREEZEDIE, pHitInfo.hitx, pHitInfo.hity);
						for (k = 0; k < 32; k++)
							icecubes(pHitInfo.hitsprite, pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz,
									pHitInfo.hitsprite);
						engine.deletesprite(pHitInfo.hitsprite);
					}
				} // switch frozen

				switch (sprite[pHitInfo.hitsprite].picnum) {
				case STAINGLASS1:
				case STAINGLASS2:
				case STAINGLASS3:
				case STAINGLASS4:
				case STAINGLASS5:
				case STAINGLASS6:
				case STAINGLASS7:
				case STAINGLASS8:
				case STAINGLASS9:
					if (!game.WH2)
						break;

				case BARREL:
				case VASEA:
				case VASEB:
				case VASEC:
					newstatus(pHitInfo.hitsprite, BROKENVASE);
					break;
				} // switch
			}
			break;

		case 6: // MEDUSA
			for (i = 0; i < MAXSPRITES; i++) {
				// cansee
				if (i != plr.spritenum) {
					switch (sprite[i].detail) {
					case FREDTYPE:
					case KOBOLDTYPE:
					case GOBLINTYPE:
					case IMPTYPE:
					case MINOTAURTYPE:
					case SPIDERTYPE:
					case SKELETONTYPE:
					case GRONTYPE:
					case GONZOTYPE:
					case KURTTYPE:
					case NEWGUYTYPE:
						if (engine.cansee(plr.x, plr.y, plr.z, plr.sector, sprite[i].x, sprite[i].y,
								sprite[i].z - (engine.getTile(sprite[i].picnum).getHeight() << 7), sprite[i].sectnum)) {
							// distance check
							if (checkmedusadist(i, plr.x, plr.y, plr.z, plr.lvl))
								medusa(plr, i);
						}
						break;
					}
				}
			}
			break;
		case 7: // KNOCKSPELL
			daz2 = (int) (100 - plr.horiz) * 2000;

			engine.hitscan(plr.x, plr.y, plr.z, plr.sector, // Start position
					sintable[(daang + 2560) & 2047], // X vector of 3D ang
					sintable[(daang + 2048) & 2047], // Y vector of 3D ang
					daz2, // Z vector of 3D ang
					pHitInfo, CLIPMASK1);

			if (pHitInfo.hitsect < 0 && pHitInfo.hitsprite < 0 || pHitInfo.hitwall >= 0) {

				engine.neartag(pHitInfo.hitx, pHitInfo.hity, pHitInfo.hitz, pHitInfo.hitsect, (short) daang,
						neartag, 1024, 3);

				if (neartag.tagsector >= 0) {
					if (sector[neartag.tagsector].lotag >= 60 && sector[neartag.tagsector].lotag <= 69) {
						sector[neartag.tagsector].lotag = 6;
						sector[neartag.tagsector].hitag = 0;
					}
					if (sector[neartag.tagsector].lotag >= 70 && sector[neartag.tagsector].lotag <= 79) {
						sector[neartag.tagsector].lotag = 7;
						sector[neartag.tagsector].hitag = 0;
					}
					operatesector(plr, neartag.tagsector);
				}

			}
			break;
		case 10: // throw a pike axe
			if (plr.currweaponframe == PIKEATTACK1 + 4 || plr.currweaponframe == ZPIKEATTACK + 4) {
				if (plr.currweaponanim == 8 && plr.currweapontics == 10) {
					if (netgame) {
						// netshootgun(-1,15);
					}

					if (game.WH2) {
						throwpikecnt = (throwpikecnt + 1) % THROWPIKELIMIT;
						if (throwpikesprite[throwpikecnt] != -1) {
							engine.deletesprite(throwpikesprite[throwpikecnt]);
							throwpikesprite[throwpikecnt] = -1;
						}

						if (plr.weapon[plr.currweapon] == 3) {
							j = engine.insertsprite(plr.sector, MISSILE);
							throwpikesprite[throwpikecnt] = j;
							sprite[j].x = plr.x;
							sprite[j].y = plr.y;
							sprite[j].z = plr.z + (24 << 8);
							sprite[j].cstat = 21;
							sprite[j].picnum = THROWPIKE;
							sprite[j].ang = (short) (((daang + 2048 + 96) - 512) & 2047);
							sprite[j].xrepeat = 24;
							sprite[j].yrepeat = 24;
							sprite[j].clipdist = 32;
							sprite[j].extra = (short) daang;
							sprite[j].shade = -15;
							sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
							if (shootgunzvel != 0) {
								sprite[j].zvel = (short) shootgunzvel;
								shootgunzvel = 0;
							} else {
								sprite[j].zvel = (short) ((100 - (int) plr.horiz) << 4);
							}
							sprite[j].owner = sprite[plr.spritenum].owner;
							sprite[j].lotag = 1024;
							sprite[j].hitag = 0;
							sprite[j].pal = 0;
							movesprite(j, ((sintable[(sprite[j].extra + 512) & 2047]) * TICSPERFRAME) << 3,
									((sintable[sprite[j].extra & 2047]) * TICSPERFRAME) << 3, 0, 4 << 8, 4 << 8, 0);
							engine.setsprite(j, sprite[j].x, sprite[j].y, sprite[j].z);
						} else {
							j = engine.insertsprite(plr.sector, MISSILE);
							throwpikesprite[throwpikecnt] = j;
							sprite[j].x = plr.x;
							sprite[j].y = plr.y;
							sprite[j].z = plr.z + (24 << 8);
							sprite[j].cstat = 21;
							sprite[j].picnum = THROWPIKE;
							sprite[j].ang = (short) ((((int) plr.ang + 2048 + 96) - 512) & 2047);
							sprite[j].xrepeat = 24;
							sprite[j].yrepeat = 24;
							sprite[j].clipdist = 32;
							sprite[j].extra = (short) plr.ang;
							sprite[j].shade = -15;
							sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].zvel = (short) ((100 - (int) plr.horiz) << 4);
							sprite[j].owner = sprite[plr.spritenum].owner;
							sprite[j].lotag = 1024;
							sprite[j].hitag = 0;
							sprite[j].pal = 0;
						}
					} else {
						j = engine.insertsprite(plr.sector, MISSILE);

						sprite[j].x = plr.x;
						sprite[j].y = plr.y;
						sprite[j].z = plr.z + (16 << 8);

						// sprite[j].cstat=17;
						sprite[j].cstat = 21;

						sprite[j].picnum = THROWPIKE;
						sprite[j].ang = (short) BClampAngle((plr.ang + 96) - 512);
						sprite[j].xrepeat = 24;
						sprite[j].yrepeat = 24;
						sprite[j].clipdist = 24;

						sprite[j].extra = (short) plr.ang;
						sprite[j].shade = -15;
						sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
						sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
						// sprite[j].zvel=((engine.krand()&256)-128);
						sprite[j].zvel = (short) ((int) (100 - plr.horiz) << 4);
						sprite[j].owner = sprite[plr.spritenum].owner;
						sprite[j].lotag = 1024;
						sprite[j].hitag = 0;
						sprite[j].pal = 0;
					}
				}
			}

			if (plr.currweaponframe == PIKEATTACK2 + 4) {
				if (plr.currweaponanim == 4 && plr.currweapontics == 10) {

					if (game.WH2) {
						throwpikecnt = (throwpikecnt + 1) % THROWPIKELIMIT;
						if (throwpikesprite[throwpikecnt] != -1) {
							engine.deletesprite(throwpikesprite[throwpikecnt]);
							throwpikesprite[throwpikecnt] = -1;
						}

						if (plr.weapon[plr.currweapon] == 3) {

							j = engine.insertsprite(plr.sector, MISSILE);
							throwpikesprite[throwpikecnt] = j;
							sprite[j].x = plr.x;
							sprite[j].y = plr.y;
							sprite[j].z = plr.z + (24 << 8);
							sprite[j].cstat = 21;
							sprite[j].picnum = THROWPIKE;
							sprite[j].ang = (short) daang;

							sprite[j].xrepeat = 24;
							sprite[j].yrepeat = 24;
							sprite[j].clipdist = 32;
							sprite[j].extra = (short) daang;

							sprite[j].shade = -15;
							sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].zvel = (short) ((100 - (int) plr.horiz) << 4);
							sprite[j].owner = sprite[plr.spritenum].owner;
							sprite[j].lotag = 1024;
							sprite[j].hitag = 0;
							sprite[j].pal = 0;
							movesprite(j, ((sintable[(sprite[j].extra + 512) & 2047]) * TICSPERFRAME) << 3,
									((sintable[sprite[j].extra & 2047]) * TICSPERFRAME) << 3, 0, 4 << 8, 4 << 8, 0);
							engine.setsprite(j, sprite[j].x, sprite[j].y, sprite[j].z);
						} else {
							j = engine.insertsprite(plr.sector, MISSILE);
							throwpikesprite[throwpikecnt] = j;
							sprite[j].x = plr.x;
							sprite[j].y = plr.y;
							sprite[j].z = plr.z + (24 << 8);
							sprite[j].cstat = 21;
							sprite[j].picnum = THROWPIKE;
							sprite[j].ang = (short) ((((int) plr.ang + 2048 + 96) - 512) & 2047);
							sprite[j].xrepeat = 24;
							sprite[j].yrepeat = 24;
							sprite[j].clipdist = 32;
							sprite[j].extra = (short) plr.ang;
							sprite[j].shade = -15;
							sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
							sprite[j].zvel = (short) ((100 - (int) plr.horiz) << 4);
							sprite[j].owner = sprite[plr.spritenum].owner;
							sprite[j].lotag = 1024;
							sprite[j].hitag = 0;
							sprite[j].pal = 0;
						}
					} else {
						j = engine.insertsprite(plr.sector, MISSILE);

						sprite[j].x = plr.x;
						sprite[j].y = plr.y;
						sprite[j].z = plr.z;

						sprite[j].cstat = 21;

						sprite[j].picnum = THROWPIKE;
						sprite[j].ang = (short) BClampAngle((plr.ang) - 512);
						sprite[j].xrepeat = 24;
						sprite[j].yrepeat = 24;
						sprite[j].clipdist = 24;

						sprite[j].extra = (short) plr.ang;
						sprite[j].shade = -15;
						sprite[j].xvel = (short) ((engine.krand() & 256) - 128);
						sprite[j].yvel = (short) ((engine.krand() & 256) - 128);
						sprite[j].zvel = (short) ((engine.krand() & 256) - 128);
						sprite[j].owner = sprite[plr.spritenum].owner;
						sprite[j].lotag = 1024;
						sprite[j].hitag = 0;
						sprite[j].pal = 0;
					}

				}
			}
			break;
		case 2: // parabolic trajectory

			if (netgame) {
//						netshootgun(-1,12);
			}

			j = engine.insertsprite(plr.sector, MISSILE);
			sprite[j].x = plr.x;
			sprite[j].y = plr.y;
			sprite[j].z = plr.z + (8 << 8) + ((engine.krand() & 10) << 8);
			sprite[j].cstat = 0;
			sprite[j].picnum = PLASMA;
			sprite[j].shade = -32;
			sprite[j].pal = 0;
			sprite[j].xrepeat = 16;
			sprite[j].yrepeat = 16;
			sprite[j].ang = (short) daang;
			sprite[j].xvel = (short) (sintable[(daang + 2560) & 2047] >> 5);
			sprite[j].yvel = (short) (sintable[(daang) & 2047] >> 5);

			if (shootgunzvel != 0) {
				sprite[j].zvel = (short) shootgunzvel;
				shootgunzvel = 0;
			} else {
				sprite[j].zvel = (short) ((int) (100 - plr.horiz) << 4);
			}

			sprite[j].owner = sprite[plr.spritenum].owner;
			sprite[j].lotag = 256;
			sprite[j].hitag = 0;
			sprite[j].clipdist = 48;

			movesprite(j, ((sintable[(sprite[j].ang + 512) & 2047]) * TICSPERFRAME) << 3,
					((sintable[sprite[j].ang & 2047]) * TICSPERFRAME) << 3, 0, 4 << 8, 4 << 8, 0);
			engine.setsprite(j, sprite[j].x, sprite[j].y, sprite[j].z);

			break;
		case 3:

			if (netgame) {
//						netshootgun(-1,13);
			}

			j = engine.insertsprite(plr.sector, MISSILE);
			sprite[j].x = plr.x;
			sprite[j].y = plr.y;
			sprite[j].z = plr.z + (8 << 8);
			sprite[j].cstat = 0; // Hitscan does not hit other bullets
			sprite[j].picnum = MONSTERBALL;
			sprite[j].shade = -32;
			sprite[j].pal = 0;
			sprite[j].xrepeat = 64;
			sprite[j].yrepeat = 64;
			sprite[j].ang = (short) plr.ang;
			sprite[j].xvel = (short) (sintable[(daang + 2560) & 2047] >> 7);
			sprite[j].yvel = (short) (sintable[(daang) & 2047] >> 7);

			if (shootgunzvel != 0) {
				sprite[j].zvel = (short) shootgunzvel;
				shootgunzvel = 0;
			} else {
				sprite[j].zvel = (short) ((int) (100 - plr.horiz) << 4);
			}

			sprite[j].owner = sprite[plr.spritenum].owner;
			sprite[j].lotag = 256;
			sprite[j].hitag = 0;
			sprite[j].clipdist = 64;

			movesprite(j, ((sintable[(sprite[j].ang + 512) & 2047]) * TICSPERFRAME) << 3,
					((sintable[sprite[j].ang & 2047]) * TICSPERFRAME) << 3, 0, 4 << 8, 4 << 8, 0);
			engine.setsprite(j, sprite[j].x, sprite[j].y, sprite[j].z);

			break;
		case 4:

			if (netgame) {
//						netshootgun(-1,14);
			}

			for (j = 0; j < MAXSPRITES; j++) {
				switch (sprite[j].detail) {
				case DEMONTYPE:
				case NEWGUYTYPE:
				case KURTTYPE:
				case GONZOTYPE:
				case IMPTYPE:
					if (!game.WH2)
						break;

				case SPIDERTYPE:
				case KOBOLDTYPE:
				case DEVILTYPE:
				case GOBLINTYPE:
				case MINOTAURTYPE:
				case SKELETONTYPE:
				case GRONTYPE:
				case DRAGONTYPE:
				case GUARDIANTYPE:
				case FATWITCHTYPE:
				case SKULLYTYPE:
				case JUDYTYPE:
				case WILLOWTYPE:
					if (engine.cansee(plr.x, plr.y, plr.z, plr.sector, sprite[j].x, sprite[j].y,
							sprite[j].z - (engine.getTile(sprite[j].picnum).getHeight() << 7), sprite[j].sectnum))
						if ((game.WH2 && sprite[j].owner != sprite[plr.spritenum].owner)
								|| checkmedusadist(j, plr.x, plr.y, plr.z, 12))
							nukespell(plr, j);
					break;
				}
			}
			break;
		}
	}

	public static boolean checkweapondist(int i, int x, int y, int z, int guntype) {
		int length = 1024;

		if (guntype != 0) {
			switch (guntype) {
			case 1:
				length = 1024;
				break;
			case 2:
			case 3:
			case 4:
			case 5:
				length = 1536;
				break;
			case 6:
				length = 2048;
				break;
			case 7:
				length = 1024;
				break;
			case 8:
			case 9:
				length = 2048;
				break;
			}
		}

		if (i >= 0 && (klabs(x - sprite[i].x) + klabs(y - sprite[i].y) < length)
				&& (klabs((z >> 8) - ((sprite[i].z >> 8) - (engine.getTile(sprite[i].picnum).getHeight() >> 1))) <= (length >> 3)))
			return true;
		else
			return false;
	}

	public static void swingdapunch(PLAYER plr, int daweapon) {
		switch (daweapon) {
		case 0:// hands
			SND_Sound(S_SOCK4);
			SND_Sound(S_PLRPAIN1 + (engine.krand() % 2));
			addhealth(plr, -1);
			startredflash(10);
			break;
		case 1: // knife
		case 2: // mace
		case 4: // sword
			SND_Sound(S_WALLHIT1);
			break;
		case 3: // arrow
			break;
		case 5:
		case 6:
		case 7:
		case 8:
			SND_Sound(S_WALLHIT1);
			break;
		}
	}

	public static void swingdaweapon(PLAYER plr) {
		float daang = plr.ang;

		if (plr.currweaponframe == BOWWALK + 5 && plr.ammo[6] > 0) {
			plr.currweaponfired = 5;
			plr.currweaponanim = 0;
		}
		if (plr.currweaponframe == BOWWALK + 5 && plr.ammo[6] <= 0) {
			plr.currweaponfired = 0;
			plr.currweaponanim = 0;
			return;
		}

		if (!game.WH2) {
			if (plr.currweaponframe == PIKEATTACK1 + 4
					// || plr.currweaponframe == PIKEATTACK2+4
					&& plr.weapon[7] == 2 && plr.ammo[7] > 0) {
				shootgun(plr, daang, 10);
				playsound_loc(S_THROWPIKE, plr.x, plr.y);
				plr.hasshot = 1;
				return;
			}
		} else {
			if (plr.currweaponframe == BOWWALK + 5 && plr.ammo[6] > 0) {
				plr.currweaponfired = 5;
				plr.currweaponanim = 0;
			} else if (plr.currweaponframe == ZBOWATTACK + 4 && plr.ammo[6] > 0) {
				plr.currweaponfired = 5;
				plr.currweaponanim = 0;
			}

			if (plr.currweaponframe == BOWWALK + 5 && plr.ammo[6] <= 0) {
				plr.currweaponfired = 0;
				plr.currweaponanim = 0;
				return;
			} else if (plr.currweaponframe == ZBOWATTACK + 4 && plr.ammo[6] <= 0) {
				plr.currweaponfired = 0;
				plr.currweaponanim = 0;
				return;
			}

			if (plr.currweaponframe == PIKEATTACK1 + 4 && plr.weapon[7] == 2 && plr.ammo[7] > 0) {
				shootgun(plr, daang, 10);
				playsound_loc(S_GENTHROW, plr.x, plr.y);
				plr.hasshot = 1;
				return;
			} else if (plr.currweaponframe == ZPIKEATTACK + 4 && plr.weapon[7] == 3 && plr.ammo[7] > 0) {
				lockon(plr, 3, 10);
				playsound_loc(S_GENTHROW, plr.x, plr.y);
				plr.hasshot = 1;
				return;
			}
		}

		switch (plr.selectedgun) {
		case 0: // fist & close combat weapons
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 1: // knife
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 2: // shortsword
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 3: // morningstar
			shootgun(plr, daang, 0);
			if (game.WH2 && plr.weapon[plr.selectedgun] == 3) {
				lockon(plr, 1, 3);
			}

			plr.hasshot = 1;
			break;
		case 4: // sword
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 5: // battleaxe
			if (game.WH2 && enchantedsoundhandle != -1) {
				SND_Sound(S_ENERGYSWING);
			}

			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 6: // bow
			if (game.WH2 && enchantedsoundhandle != -1) {
				SND_Sound(S_FIREBALL);
				SND_Sound(S_PLRWEAPON3);
			}
			shootgun(plr, daang, 1);
			plr.hasshot = 1;
			break;
		case 7: // pike
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 8: // two handed
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		case 9: // halberd
			shootgun(plr, daang, 0);
			plr.hasshot = 1;
			break;
		}
	}

	public static void swingdacrunch(PLAYER plr, int daweapon) {

		switch (daweapon) {
		case 0: // fist
			playsound_loc(S_SOCK1 + (engine.krand() % 4), plr.x, plr.y);
			break;
		case 1: // dagger
			if ((engine.krand() % 2) != 0)
				playsound_loc(S_GORE1 + (engine.krand() % 4), plr.x, plr.y);
			break;
		case 2: // short sword
			playsound_loc(S_SWORD2 + (engine.krand() % 3), plr.x, plr.y);
			break;
		case 3: // morningstar
			playsound_loc(S_SOCK1 + (engine.krand() % 4), plr.x, plr.y);
			break;
		case 4: // broad sword
			playsound_loc(S_SWORD1 + (engine.krand() % 3), plr.x, plr.y);
			break;
		case 5: // battle axe
			if ((engine.krand() % 2) != 0)
				playsound_loc(S_SOCK1 + (engine.krand() % 4), plr.x, plr.y);
			else
				playsound_loc(S_SWORD1 + (engine.krand() % 3), plr.x, plr.y);
			break;
		case 6: // bow

			break;
		case 7: // pike
			if ((engine.krand() % 2) != 0)
				playsound_loc(S_SOCK1 + (engine.krand() % 4), plr.x, plr.y);
			else
				playsound_loc(S_SWORD1 + (engine.krand() % 3), plr.x, plr.y);
			break;
		case 8: // two handed sword
			playsound_loc(S_SWORD1 + (engine.krand() % 2), plr.x, plr.y);
			break;
		case 9: // halberd
			if ((engine.krand() % 2) != 0)
				playsound_loc(S_SOCK1 + (engine.krand() % 4), plr.x, plr.y);
			else
				playsound_loc(S_SWORD1 + (engine.krand() % 3), plr.x, plr.y);
			break;
		}
	}

	public static void swingdasound(int daweapon, boolean enchanted) {

		switch (daweapon) {
		case 0: // fist
			SND_Sound(S_PLRWEAPON0);
			break;
		case 1: // knife
			SND_Sound(S_PLRWEAPON1);
			break;
		case 2: // short sword
			if (game.WH2 && enchanted)
				SND_Sound(S_FIRESWING);
			else
				SND_Sound(S_PLRWEAPON4);
			break;
		case 3: // mace
			if (game.WH2 && enchanted) {
				SND_Sound(S_FIRESWING);
				SND_Sound(S_FIREBALL);
			} else
				SND_Sound(S_PLRWEAPON2);
			break;
		case 4: //
			SND_Sound(S_PLRWEAPON4);
			break;
		case 5: // sword
			SND_Sound(S_PLRWEAPON4);
			break;
		case 6: // bow
			SND_Sound(S_PLRWEAPON3);
			break;
		case 7: //
			if (game.WH2 && enchanted)
				SND_Sound(S_ENERGYSWING);
			else
				SND_Sound(S_PLRWEAPON4);
			break;
		case 8: //
			SND_Sound(S_PLRWEAPON4);
			break;
		case 9: //
			SND_Sound(S_PLRWEAPON4);
			break;
		}
	}

}
